<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1046" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1029.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1029.00"> </text><svg id="frames" x="10" width="1180" total_samples="317"><g><title>[[stack]] (1 samples, 0.32%)</title><rect x="0.0000%" y="965" width="0.3155%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.32%)</title><rect x="0.0000%" y="949" width="0.3155%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.32%)</title><rect x="0.3155%" y="965" width="0.3155%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.5655%" y="975.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.32%)</title><rect x="0.3155%" y="949" width="0.3155%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.5655%" y="959.50"></text></g><g><title>_RINvNtCsewSY1tgGK6q_4core3ptr13drop_in_placeINtNtNtNtCs93HjBDhGDHo_3std11collections4hash3map7HashMapNtNtNtCsjrgk26VM9Gl_5cargo4core10package_id9PackageIdNtNtB1F_7summary7SummaryEEB1H_ (1 samples, 0.32%)</title><rect x="0.6309%" y="885" width="0.3155%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.8809%" y="895.50"></text></g><g><title>_RINvNtCsewSY1tgGK6q_4core3ptr13drop_in_placeNtNtNtCsjrgk26VM9Gl_5cargo4core7summary5InnerEBM_ (1 samples, 0.32%)</title><rect x="0.6309%" y="869" width="0.3155%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.8809%" y="879.50"></text></g><g><title>_RINvNtCsewSY1tgGK6q_4core3ptr13drop_in_placeINtNtCsh2sH3M5QVbG_5alloc3vec3VecNtNtNtCsjrgk26VM9Gl_5cargo4core10dependency10DependencyEEB1j_ (1 samples, 0.32%)</title><rect x="0.6309%" y="853" width="0.3155%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.8809%" y="863.50"></text></g><g><title>_RINvNtCsewSY1tgGK6q_4core3ptr13drop_in_placeNtNtNtCsjrgk26VM9Gl_5cargo4core10dependency5InnerEBM_ (1 samples, 0.32%)</title><rect x="0.6309%" y="837" width="0.3155%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.8809%" y="847.50"></text></g><g><title>_RINvNtCsewSY1tgGK6q_4core3ptr13drop_in_placeINtNtCsh2sH3M5QVbG_5alloc3vec3VecNtCs9Hf7iz5kWU3_6semver10ComparatorEECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="0.6309%" y="821" width="0.3155%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.8809%" y="831.50"></text></g><g><title>_RINvNtCsewSY1tgGK6q_4core3ptr13drop_in_placeNtNtNtCsjrgk26VM9Gl_5cargo3ops7resolve16WorkspaceResolveEBM_ (2 samples, 0.63%)</title><rect x="0.6309%" y="901" width="0.6309%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="2"/><text x="0.8809%" y="911.50"></text></g><g><title>_RINvNtCsewSY1tgGK6q_4core3ptr13drop_in_placeNtNtNtCsjrgk26VM9Gl_5cargo4core7package10PackageSetEBM_ (1 samples, 0.32%)</title><rect x="0.9464%" y="885" width="0.3155%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="1.1964%" y="895.50"></text></g><g><title>_RINvNtCsewSY1tgGK6q_4core3ptr13drop_in_placeTNtNtNtCsjrgk26VM9Gl_5cargo4core10package_id9PackageIdINtCs3svBIar3096_8lazycell8LazyCellNtNtBL_7package7PackageEEEBN_ (1 samples, 0.32%)</title><rect x="0.9464%" y="869" width="0.3155%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="1.1964%" y="879.50"></text></g><g><title>_RINvNtCsewSY1tgGK6q_4core3ptr13drop_in_placeNtNtNtCsjrgk26VM9Gl_5cargo4core8manifest8ManifestEBM_ (1 samples, 0.32%)</title><rect x="0.9464%" y="853" width="0.3155%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="1.1964%" y="863.50"></text></g><g><title>_RINvNtCsewSY1tgGK6q_4core3ptr13drop_in_placeNtNtCscB7awYtk5YY_18cargo_util_schemas8manifest12TomlManifestECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="0.9464%" y="837" width="0.3155%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="1.1964%" y="847.50"></text></g><g><title>_RNvMs1_NtNtNtNtCsjrgk26VM9Gl_5cargo4core8compiler13build_context11target_infoNtB5_15RustcTargetData3new (1 samples, 0.32%)</title><rect x="1.2618%" y="901" width="0.3155%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="1"/><text x="1.5118%" y="911.50"></text></g><g><title>_RNvMNtNtCsjrgk26VM9Gl_5cargo4util6configNtB2_6Config17load_global_rustc (1 samples, 0.32%)</title><rect x="1.2618%" y="885" width="0.3155%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="1"/><text x="1.5118%" y="895.50"></text></g><g><title>_RNvMNtNtCsjrgk26VM9Gl_5cargo4util5rustcNtB2_5Rustc3new (1 samples, 0.32%)</title><rect x="1.2618%" y="869" width="0.3155%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="1.5118%" y="879.50"></text></g><g><title>_RNvMs5_NtNtCsjrgk26VM9Gl_5cargo4util9interningNtB5_14InternedString3new (1 samples, 0.32%)</title><rect x="1.2618%" y="853" width="0.3155%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="1"/><text x="1.5118%" y="863.50"></text></g><g><title>_RNvMs1_NtCsa7jAvkiL5p8_9hashbrown3mapINtB5_7HashMapReuNtNtNtCs93HjBDhGDHo_3std4hash6random11RandomStateE6insertCsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="1.2618%" y="837" width="0.3155%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="1"/><text x="1.5118%" y="847.50"></text></g><g><title>_RINvMs6_NtCsa7jAvkiL5p8_9hashbrown3rawINtB6_8RawTableTReuEE14reserve_rehashNCINvNtB8_3map11make_hasherBQ_uNtNtNtCs93HjBDhGDHo_3std4hash6random11RandomStateE0ECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="1.2618%" y="821" width="0.3155%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="1"/><text x="1.5118%" y="831.50"></text></g><g><title>_RINvYNtNtNtCs93HjBDhGDHo_3std4hash6random11RandomStateNtNtCsewSY1tgGK6q_4core4hash11BuildHasher8hash_oneRNtNtNtCsjrgk26VM9Gl_5cargo4core20global_cache_tracker13RegistryIndexEB1L_ (1 samples, 0.32%)</title><rect x="1.2618%" y="805" width="0.3155%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="1"/><text x="1.5118%" y="815.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops21cargo_output_metadata21build_resolve_graph_r (1 samples, 0.32%)</title><rect x="1.5773%" y="901" width="0.3155%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="1.8273%" y="911.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops21cargo_output_metadata21build_resolve_graph_r (1 samples, 0.32%)</title><rect x="1.5773%" y="885" width="0.3155%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="1.8273%" y="895.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops21cargo_output_metadata21build_resolve_graph_r (1 samples, 0.32%)</title><rect x="1.5773%" y="869" width="0.3155%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="1.8273%" y="879.50"></text></g><g><title>_RINvMs1_NtCsa7jAvkiL5p8_9hashbrown3mapINtB6_7HashMapNtNtNtCsjrgk26VM9Gl_5cargo4core10package_id9PackageIdINtNtCsh2sH3M5QVbG_5alloc3vec3VecNtNtNtBU_4util9interning14InternedStringENtNtNtCs93HjBDhGDHo_3std4hash6random11RandomStateE3getBO_EBU_ (1 samples, 0.32%)</title><rect x="1.5773%" y="853" width="0.3155%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="1"/><text x="1.8273%" y="863.50"></text></g><g><title>_RINvYNtNtNtCs93HjBDhGDHo_3std4hash6random11RandomStateNtNtCsewSY1tgGK6q_4core4hash11BuildHasher8hash_oneRNtNtNtCsjrgk26VM9Gl_5cargo4core10package_id9PackageIdEB1L_ (1 samples, 0.32%)</title><rect x="1.5773%" y="837" width="0.3155%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="1"/><text x="1.8273%" y="847.50"></text></g><g><title>_RINvXs6_NtNtCsjrgk26VM9Gl_5cargo4core9source_idNtB6_8SourceIdNtNtCsewSY1tgGK6q_4core4hash4Hash4hashNtNtNtCs93HjBDhGDHo_3std4hash6random13DefaultHasherEBa_ (1 samples, 0.32%)</title><rect x="1.5773%" y="821" width="0.3155%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="1"/><text x="1.8273%" y="831.50"></text></g><g><title>_RNvCsgEODShloEAT_5cargo4main (5 samples, 1.58%)</title><rect x="0.6309%" y="965" width="1.5773%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="5"/><text x="0.8809%" y="975.50"></text></g><g><title>_RNvNtCsgEODShloEAT_5cargo3cli4main (5 samples, 1.58%)</title><rect x="0.6309%" y="949" width="1.5773%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="5"/><text x="0.8809%" y="959.50"></text></g><g><title>_RNvNtNtCsgEODShloEAT_5cargo8commands8metadata4exec (5 samples, 1.58%)</title><rect x="0.6309%" y="933" width="1.5773%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="5"/><text x="0.8809%" y="943.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops21cargo_output_metadata15output_metadata (5 samples, 1.58%)</title><rect x="0.6309%" y="917" width="1.5773%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="5"/><text x="0.8809%" y="927.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops7resolve20resolve_ws_with_opts (1 samples, 0.32%)</title><rect x="1.8927%" y="901" width="0.3155%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="1"/><text x="2.1427%" y="911.50"></text></g><g><title>_RNvMs6_NtNtCsjrgk26VM9Gl_5cargo4core7packageNtB5_10PackageSet19download_accessible (1 samples, 0.32%)</title><rect x="1.8927%" y="885" width="0.3155%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="1"/><text x="2.1427%" y="895.50"></text></g><g><title>_RNvMs1_NtNtCsjrgk26VM9Gl_5cargo4core20global_cache_trackerNtB5_21DeferredGlobalLastUse13save_no_error (1 samples, 0.32%)</title><rect x="1.8927%" y="869" width="0.3155%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="1"/><text x="2.1427%" y="879.50"></text></g><g><title>_RNvMs1_NtNtCsjrgk26VM9Gl_5cargo4core20global_cache_trackerNtB5_21DeferredGlobalLastUse4save (1 samples, 0.32%)</title><rect x="1.8927%" y="853" width="0.3155%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="1"/><text x="2.1427%" y="863.50"></text></g><g><title>_RNvMs1_NtNtCsjrgk26VM9Gl_5cargo4core20global_cache_trackerNtB5_21DeferredGlobalLastUse30insert_registry_src_from_cache (1 samples, 0.32%)</title><rect x="1.8927%" y="837" width="0.3155%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="1"/><text x="2.1427%" y="847.50"></text></g><g><title>_RNvMs4_NtCsfeaFtTxdVkU_8rusqlite5cacheNtB5_14StatementCache3get (1 samples, 0.32%)</title><rect x="1.8927%" y="821" width="0.3155%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="1"/><text x="2.1427%" y="831.50"></text></g><g><title>_RNvNtNtCsgEODShloEAT_5cargo8commands8metadata4exec (1 samples, 0.32%)</title><rect x="2.2082%" y="965" width="0.3155%" height="15" fill="rgb(245,192,40)" fg:x="7" fg:w="1"/><text x="2.4582%" y="975.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops21cargo_output_metadata15output_metadata (1 samples, 0.32%)</title><rect x="2.2082%" y="949" width="0.3155%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="1"/><text x="2.4582%" y="959.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops7resolve20resolve_ws_with_opts (1 samples, 0.32%)</title><rect x="2.2082%" y="933" width="0.3155%" height="15" fill="rgb(232,182,51)" fg:x="7" fg:w="1"/><text x="2.4582%" y="943.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops7resolve21resolve_with_registry (1 samples, 0.32%)</title><rect x="2.2082%" y="917" width="0.3155%" height="15" fill="rgb(231,60,39)" fg:x="7" fg:w="1"/><text x="2.4582%" y="927.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops7resolve21resolve_with_previous (1 samples, 0.32%)</title><rect x="2.2082%" y="901" width="0.3155%" height="15" fill="rgb(208,69,12)" fg:x="7" fg:w="1"/><text x="2.4582%" y="911.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo4core8resolver7resolve (1 samples, 0.32%)</title><rect x="2.2082%" y="885" width="0.3155%" height="15" fill="rgb(235,93,37)" fg:x="7" fg:w="1"/><text x="2.4582%" y="895.50"></text></g><g><title>_RNvXNtCsb8OUMu2bx41_12sized_chunks12sparse_chunkINtB2_11SparseChunkINtNtNtCs5qFqTRwIjNH_5im_rc5nodes4hamt5EntryTNtNtNtCsjrgk26VM9Gl_5cargo4core10package_id9PackageIdINtNtCsh2sH3M5QVbG_5alloc2rc2RcINtNtNtNtB2I_11collections5btree3set8BTreeSetNtNtNtB1S_4util9interning14InternedStringEEEEINtNtCs2COrIyF8yuz_7typenum4uint4UIntIB4B_IB4B_IB4B_IB4B_IB4B_NtB4D_5UTermNtNtB4F_3bit2B1ENtB5O_2B0EB62_EB62_EB62_EB62_EENtNtNtCsewSY1tgGK6q_4core3ops4drop4Drop4dropB1S_ (1 samples, 0.32%)</title><rect x="2.2082%" y="869" width="0.3155%" height="15" fill="rgb(213,116,39)" fg:x="7" fg:w="1"/><text x="2.4582%" y="879.50"></text></g><g><title>_RNvXNtCsb8OUMu2bx41_12sized_chunks12sparse_chunkINtB2_11SparseChunkINtNtNtCs5qFqTRwIjNH_5im_rc5nodes4hamt5EntryTNtNtNtCsjrgk26VM9Gl_5cargo4core10package_id9PackageIdINtNtCsh2sH3M5QVbG_5alloc2rc2RcINtNtNtNtB2I_11collections5btree3set8BTreeSetNtNtNtB1S_4util9interning14InternedStringEEEEINtNtCs2COrIyF8yuz_7typenum4uint4UIntIB4B_IB4B_IB4B_IB4B_IB4B_NtB4D_5UTermNtNtB4F_3bit2B1ENtB5O_2B0EB62_EB62_EB62_EB62_EENtNtNtCsewSY1tgGK6q_4core3ops4drop4Drop4dropB1S_ (1 samples, 0.32%)</title><rect x="2.2082%" y="853" width="0.3155%" height="15" fill="rgb(222,207,29)" fg:x="7" fg:w="1"/><text x="2.4582%" y="863.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops19cargo_read_manifest12read_package (1 samples, 0.32%)</title><rect x="2.5237%" y="965" width="0.3155%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="1"/><text x="2.7737%" y="975.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo4util4toml13read_manifest (1 samples, 0.32%)</title><rect x="2.5237%" y="949" width="0.3155%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="1"/><text x="2.7737%" y="959.50"></text></g><g><title>_RNvXs5_NtCs5Om4XHNZ1uN_9toml_edit2deNtB5_12DeserializerNtNtNtCsewSY1tgGK6q_4core3str6traits7FromStr8from_str (1 samples, 0.32%)</title><rect x="2.5237%" y="933" width="0.3155%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="1"/><text x="2.7737%" y="943.50"></text></g><g><title>_RNvNtCs5Om4XHNZ1uN_9toml_edit6parser14parse_document (1 samples, 0.32%)</title><rect x="2.5237%" y="917" width="0.3155%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="1"/><text x="2.7737%" y="927.50"></text></g><g><title>_RNCINvNtNtCs9pqBtHe4HRq_6winnow10combinator5multi6repeatINtNtB8_6stream7LocatedRNtBV_4BStrETuuEuNtNtB8_5error12ContextErrorTNCNvNtNtCs5Om4XHNZ1uN_9toml_edit6parser8document8documents0_0NCNvB22_8parse_ws0EINtNtNtCsewSY1tgGK6q_4core3ops5range9RangeFromjEE0B26_ (1 samples, 0.32%)</title><rect x="2.5237%" y="901" width="0.3155%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="1"/><text x="2.7737%" y="911.50"></text></g><g><title>_RNvMNtNtCs5Om4XHNZ1uN_9toml_edit6parser5stateNtB2_10ParseState13on_std_header (1 samples, 0.32%)</title><rect x="2.5237%" y="885" width="0.3155%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="1"/><text x="2.7737%" y="895.50"></text></g><g><title>_RNvMNtNtCs5Om4XHNZ1uN_9toml_edit6parser5stateNtB2_10ParseState14finalize_table (1 samples, 0.32%)</title><rect x="2.5237%" y="869" width="0.3155%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="1"/><text x="2.7737%" y="879.50"></text></g><g><title>_RNvMsa_NtCs5Om4XHNZ1uN_9toml_edit5tableNtB5_11VacantEntry6insert (1 samples, 0.32%)</title><rect x="2.5237%" y="853" width="0.3155%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="1"/><text x="2.7737%" y="863.50"></text></g><g><title>_RNvMs6_NtNtCsaQLIgRjUEec_8indexmap3map4coreINtB5_11VacantEntryNtNtCs5Om4XHNZ1uN_9toml_edit15internal_string14InternalStringNtNtB12_5table13TableKeyValueE6insertB12_ (1 samples, 0.32%)</title><rect x="2.5237%" y="837" width="0.3155%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="1"/><text x="2.7737%" y="847.50"></text></g><g><title>_RINvMs6_NtNtCs7qy5bsyZGSz_9hashbrown3raw5innerINtB6_8RawTablejE14reserve_rehashNCINvNtNtCsaQLIgRjUEec_8indexmap3map4core8get_hashNtNtCs5Om4XHNZ1uN_9toml_edit15internal_string14InternalStringNtNtB27_5table13TableKeyValueE0EB27_ (1 samples, 0.32%)</title><rect x="2.5237%" y="821" width="0.3155%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="1"/><text x="2.7737%" y="831.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops21cargo_output_metadata15output_metadata (1 samples, 0.32%)</title><rect x="2.8391%" y="965" width="0.3155%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="1"/><text x="3.0891%" y="975.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops7resolve20resolve_ws_with_opts (1 samples, 0.32%)</title><rect x="2.8391%" y="949" width="0.3155%" height="15" fill="rgb(217,147,25)" fg:x="9" fg:w="1"/><text x="3.0891%" y="959.50"></text></g><g><title>_RNvMs6_NtNtCsjrgk26VM9Gl_5cargo4core7packageNtB5_10PackageSet19download_accessible (1 samples, 0.32%)</title><rect x="2.8391%" y="933" width="0.3155%" height="15" fill="rgb(247,81,37)" fg:x="9" fg:w="1"/><text x="3.0891%" y="943.50"></text></g><g><title>_RNvMs7_NtNtCsjrgk26VM9Gl_5cargo4core7packageNtB5_9Downloads5start (1 samples, 0.32%)</title><rect x="2.8391%" y="917" width="0.3155%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="1"/><text x="3.0891%" y="927.50"></text></g><g><title>_RNvXs_NtNtCsjrgk26VM9Gl_5cargo7sources8replacedNtB4_14ReplacedSourceNtNtB6_6source6Source8download (1 samples, 0.32%)</title><rect x="2.8391%" y="901" width="0.3155%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="1"/><text x="3.0891%" y="911.50"></text></g><g><title>_RNvMs0_NtNtCsjrgk26VM9Gl_5cargo4core7packageNtB5_7Package10map_source (1 samples, 0.32%)</title><rect x="2.8391%" y="885" width="0.3155%" height="15" fill="rgb(248,47,43)" fg:x="9" fg:w="1"/><text x="3.0891%" y="895.50"></text></g><g><title>_RNvXsd_NtNtCsjrgk26VM9Gl_5cargo4core8manifestNtB5_8ManifestNtNtCsewSY1tgGK6q_4core5clone5Clone5clone (1 samples, 0.32%)</title><rect x="2.8391%" y="869" width="0.3155%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="1"/><text x="3.0891%" y="879.50"></text></g><g><title>_RNvXsI_NtCs8yljfUQn3dh_4toml5valueNtB5_5ValueNtNtCsewSY1tgGK6q_4core5clone5Clone5clone (1 samples, 0.32%)</title><rect x="2.8391%" y="853" width="0.3155%" height="15" fill="rgb(210,229,1)" fg:x="9" fg:w="1"/><text x="3.0891%" y="863.50"></text></g><g><title>_RINvNvXs0_NtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCsewSY1tgGK6q_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringNtNtCs8yljfUQn3dh_4toml5value5ValueNtNtBe_5alloc6GlobalECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="2.8391%" y="837" width="0.3155%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="1"/><text x="3.0891%" y="847.50"></text></g><g><title>_RNvXsI_NtCs8yljfUQn3dh_4toml5valueNtB5_5ValueNtNtCsewSY1tgGK6q_4core5clone5Clone5clone (1 samples, 0.32%)</title><rect x="2.8391%" y="821" width="0.3155%" height="15" fill="rgb(234,67,33)" fg:x="9" fg:w="1"/><text x="3.0891%" y="831.50"></text></g><g><title>_RINvNvXs0_NtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCsewSY1tgGK6q_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringNtNtCs8yljfUQn3dh_4toml5value5ValueNtNtBe_5alloc6GlobalECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="2.8391%" y="805" width="0.3155%" height="15" fill="rgb(247,98,35)" fg:x="9" fg:w="1"/><text x="3.0891%" y="815.50"></text></g><g><title>_RNvXsI_NtCs8yljfUQn3dh_4toml5valueNtB5_5ValueNtNtCsewSY1tgGK6q_4core5clone5Clone5clone (1 samples, 0.32%)</title><rect x="2.8391%" y="789" width="0.3155%" height="15" fill="rgb(247,138,52)" fg:x="9" fg:w="1"/><text x="3.0891%" y="799.50"></text></g><g><title>_RINvNvXs0_NtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCsewSY1tgGK6q_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringNtNtCs8yljfUQn3dh_4toml5value5ValueNtNtBe_5alloc6GlobalECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="2.8391%" y="773" width="0.3155%" height="15" fill="rgb(213,79,30)" fg:x="9" fg:w="1"/><text x="3.0891%" y="783.50"></text></g><g><title>_RNvXsI_NtCs8yljfUQn3dh_4toml5valueNtB5_5ValueNtNtCsewSY1tgGK6q_4core5clone5Clone5clone (1 samples, 0.32%)</title><rect x="2.8391%" y="757" width="0.3155%" height="15" fill="rgb(246,177,23)" fg:x="9" fg:w="1"/><text x="3.0891%" y="767.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops7resolve20resolve_ws_with_opts (1 samples, 0.32%)</title><rect x="3.1546%" y="965" width="0.3155%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="1"/><text x="3.4046%" y="975.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops7resolve21resolve_with_registry (1 samples, 0.32%)</title><rect x="3.1546%" y="949" width="0.3155%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="1"/><text x="3.4046%" y="959.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops8lockfile17load_pkg_lockfile (1 samples, 0.32%)</title><rect x="3.1546%" y="933" width="0.3155%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="1"/><text x="3.4046%" y="943.50"></text></g><g><title>_RINvXs3_NtCs8yljfUQn3dh_4toml2deNtB6_12DeserializerNtNtCs17R7Md97ctu_5serde2de12Deserializer18deserialize_structNtNvXNvNtNtNtCsjrgk26VM9Gl_5cargo4core8resolver6encodes_1__NtB1T_16EncodableResolveNtBP_11Deserialize11deserialize9___VisitorEB1Z_ (1 samples, 0.32%)</title><rect x="3.1546%" y="917" width="0.3155%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="3.4046%" y="927.50"></text></g><g><title>_RINvXNtNtCs5Om4XHNZ1uN_9toml_edit2de5tableNtB3_17TableDeserializerNtNtCs17R7Md97ctu_5serde2de12Deserializer15deserialize_anyNtNvXNvNtNtNtCsjrgk26VM9Gl_5cargo4core8resolver6encodes_1__NtB25_16EncodableResolveNtB14_11Deserialize11deserialize9___VisitorEB2b_ (1 samples, 0.32%)</title><rect x="3.1546%" y="901" width="0.3155%" height="15" fill="rgb(240,54,50)" fg:x="10" fg:w="1"/><text x="3.4046%" y="911.50"></text></g><g><title>_RINvXs3_NtCs17R7Md97ctu_5serde2deINtNtCsewSY1tgGK6q_4core6marker11PhantomDataINtNtBA_6option6OptionINtNtCsh2sH3M5QVbG_5alloc3vec3VecNtNtNtNtCsjrgk26VM9Gl_5cargo4core8resolver6encode19EncodableDependencyEEENtB6_15DeserializeSeed11deserializeNtNtNtCs5Om4XHNZ1uN_9toml_edit2de5value17ValueDeserializerEB2e_ (1 samples, 0.32%)</title><rect x="3.1546%" y="885" width="0.3155%" height="15" fill="rgb(233,84,52)" fg:x="10" fg:w="1"/><text x="3.4046%" y="895.50"></text></g><g><title>_RINvXsh_NtNtCs17R7Md97ctu_5serde2de5implsINtNtCsh2sH3M5QVbG_5alloc3vec3VecNtNtNtNtCsjrgk26VM9Gl_5cargo4core8resolver6encode19EncodableDependencyENtB8_11Deserialize11deserializeNtNtNtCs5Om4XHNZ1uN_9toml_edit2de5value17ValueDeserializerEB1i_ (1 samples, 0.32%)</title><rect x="3.1546%" y="869" width="0.3155%" height="15" fill="rgb(207,117,47)" fg:x="10" fg:w="1"/><text x="3.4046%" y="879.50"></text></g><g><title>_RINvXs_NtNtCs5Om4XHNZ1uN_9toml_edit2de5arrayNtB5_17ArrayDeserializerNtNtCs17R7Md97ctu_5serde2de12Deserializer15deserialize_anyINtNvXsh_NtB16_5implsINtNtCsh2sH3M5QVbG_5alloc3vec3VecpENtB16_11Deserialize11deserialize10VecVisitorNtNtNtNtCsjrgk26VM9Gl_5cargo4core8resolver6encode19EncodableDependencyEEB3K_ (1 samples, 0.32%)</title><rect x="3.1546%" y="853" width="0.3155%" height="15" fill="rgb(249,43,39)" fg:x="10" fg:w="1"/><text x="3.4046%" y="863.50"></text></g><g><title>_RINvXNvNtNtNtCsjrgk26VM9Gl_5cargo4core8resolver6encodes3_1__NtB5_19EncodableDependencyNtNtCs17R7Md97ctu_5serde2de11Deserialize11deserializeNtNtNtCs5Om4XHNZ1uN_9toml_edit2de5value17ValueDeserializerEBb_ (1 samples, 0.32%)</title><rect x="3.1546%" y="837" width="0.3155%" height="15" fill="rgb(209,38,44)" fg:x="10" fg:w="1"/><text x="3.4046%" y="847.50"></text></g><g><title>_RINvXNtNtCs5Om4XHNZ1uN_9toml_edit2de5tableNtB3_17TableDeserializerNtNtCs17R7Md97ctu_5serde2de12Deserializer15deserialize_anyNtNvXNvNtNtNtCsjrgk26VM9Gl_5cargo4core8resolver6encodes3_1__NtB25_19EncodableDependencyNtB14_11Deserialize11deserialize9___VisitorEB2b_ (1 samples, 0.32%)</title><rect x="3.1546%" y="821" width="0.3155%" height="15" fill="rgb(236,212,23)" fg:x="10" fg:w="1"/><text x="3.4046%" y="831.50"></text></g><g><title>_RINvXs3_NtCs17R7Md97ctu_5serde2deINtNtCsewSY1tgGK6q_4core6marker11PhantomDataINtNtBA_6option6OptionNtNtNtNtCsjrgk26VM9Gl_5cargo4core8resolver6encode17EncodableSourceIdEENtB6_15DeserializeSeed11deserializeNtNtNtCs5Om4XHNZ1uN_9toml_edit2de5value17ValueDeserializerEB1H_ (1 samples, 0.32%)</title><rect x="3.1546%" y="805" width="0.3155%" height="15" fill="rgb(242,79,21)" fg:x="10" fg:w="1"/><text x="3.4046%" y="815.50"></text></g><g><title>_RNvMs_NtNtCsjrgk26VM9Gl_5cargo4core9source_idNtB4_8SourceId8from_url (1 samples, 0.32%)</title><rect x="3.1546%" y="789" width="0.3155%" height="15" fill="rgb(211,96,35)" fg:x="10" fg:w="1"/><text x="3.4046%" y="799.50"></text></g><g><title>_RNvMs_NtNtCsjrgk26VM9Gl_5cargo4core9source_idNtB4_8SourceId3new (1 samples, 0.32%)</title><rect x="3.1546%" y="773" width="0.3155%" height="15" fill="rgb(253,215,40)" fg:x="10" fg:w="1"/><text x="3.4046%" y="783.50"></text></g><g><title>_RNvMNtNtCsjrgk26VM9Gl_5cargo4util13canonical_urlNtB2_12CanonicalUrl3new (1 samples, 0.32%)</title><rect x="3.1546%" y="757" width="0.3155%" height="15" fill="rgb(211,81,21)" fg:x="10" fg:w="1"/><text x="3.4046%" y="767.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops7resolve21resolve_with_registry (1 samples, 0.32%)</title><rect x="3.4700%" y="965" width="0.3155%" height="15" fill="rgb(208,190,38)" fg:x="11" fg:w="1"/><text x="3.7200%" y="975.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo3ops7resolve21resolve_with_previous (1 samples, 0.32%)</title><rect x="3.4700%" y="949" width="0.3155%" height="15" fill="rgb(235,213,38)" fg:x="11" fg:w="1"/><text x="3.7200%" y="959.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo4core8resolver7resolve (1 samples, 0.32%)</title><rect x="3.4700%" y="933" width="0.3155%" height="15" fill="rgb(237,122,38)" fg:x="11" fg:w="1"/><text x="3.7200%" y="943.50"></text></g><g><title>_RINvMs2_NtNtCs5qFqTRwIjNH_5im_rc3ord3mapINtB6_5EntryNtNtNtCsjrgk26VM9Gl_5cargo4core10package_id9PackageIdINtB6_6OrdMapBO_INtNtNtNtCs93HjBDhGDHo_3std11collections4hash3set7HashSetNtNtBS_10dependency10DependencyEEE14or_insert_withNvMs_B6_B1F_3newEBU_ (1 samples, 0.32%)</title><rect x="3.4700%" y="917" width="0.3155%" height="15" fill="rgb(244,218,35)" fg:x="11" fg:w="1"/><text x="3.7200%" y="927.50"></text></g><g><title>_RINvMs1_NtNtCs5qFqTRwIjNH_5im_rc3ord3mapINtB6_6OrdMapNtNtNtCsjrgk26VM9Gl_5cargo4core10package_id9PackageIdIBD_BP_INtNtNtNtCs93HjBDhGDHo_3std11collections4hash3set7HashSetNtNtBT_10dependency10DependencyEEE7get_mutBP_EBV_ (1 samples, 0.32%)</title><rect x="3.4700%" y="901" width="0.3155%" height="15" fill="rgb(240,68,47)" fg:x="11" fg:w="1"/><text x="3.7200%" y="911.50"></text></g><g><title>_RINvXNtNtCs5qFqTRwIjNH_5im_rc3ord3mapTNtNtNtCsjrgk26VM9Gl_5cargo4core10package_id9PackageIdINtB3_6OrdMapBA_INtNtNtB7_4hash3set7HashSetNtNtBE_10dependency10DependencyEEENtNtNtB7_5nodes5btree10BTreeValue10search_keyBA_EBG_ (1 samples, 0.32%)</title><rect x="3.4700%" y="885" width="0.3155%" height="15" fill="rgb(210,16,53)" fg:x="11" fg:w="1"/><text x="3.7200%" y="895.50"></text></g><g><title>_RINvYNtNtNtCs93HjBDhGDHo_3std4hash6random11RandomStateNtNtCsewSY1tgGK6q_4core4hash11BuildHasher8hash_oneRTINtNtBU_6option6OptionNtNtNtCsjrgk26VM9Gl_5cargo4core10package_id9PackageIdENtNtB26_7summary7SummaryNtNtNtB26_8resolver5types11ResolveOptsEEB28_ (1 samples, 0.32%)</title><rect x="3.7855%" y="933" width="0.3155%" height="15" fill="rgb(235,124,12)" fg:x="12" fg:w="1"/><text x="4.0355%" y="943.50"></text></g><g><title>_RINvXs6_NtNtCsjrgk26VM9Gl_5cargo4core9source_idNtB6_8SourceIdNtNtCsewSY1tgGK6q_4core4hash4Hash4hashNtNtNtCs93HjBDhGDHo_3std4hash6random13DefaultHasherEBa_ (1 samples, 0.32%)</title><rect x="3.7855%" y="917" width="0.3155%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="1"/><text x="4.0355%" y="927.50"></text></g><g><title>_RNvXs3_NtNtCsewSY1tgGK6q_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="3.7855%" y="901" width="0.3155%" height="15" fill="rgb(250,166,2)" fg:x="12" fg:w="1"/><text x="4.0355%" y="911.50"></text></g><g><title>_RNvMs1_NtCsa7jAvkiL5p8_9hashbrown3mapINtB5_7HashMapTNtNtNtCsjrgk26VM9Gl_5cargo4core10dependency10DependencyINtNtCsewSY1tgGK6q_4core6option6OptionNtNtNtBS_8resolver13version_prefs15VersionOrderingEEINtNtNtB1M_4task4poll4PollINtNtCsh2sH3M5QVbG_5alloc2rc2RcINtNtB3E_3vec3VecNtNtBS_7summary7SummaryEEENtNtNtCs93HjBDhGDHo_3std4hash6random11RandomStateE6insertBU_ (1 samples, 0.32%)</title><rect x="4.1009%" y="901" width="0.3155%" height="15" fill="rgb(242,216,29)" fg:x="13" fg:w="1"/><text x="4.3509%" y="911.50"></text></g><g><title>_RNvMse_NtCsh2sH3M5QVbG_5alloc2rcINtB5_2RcNtNtNtCsjrgk26VM9Gl_5cargo4core10dependency5InnerE8make_mutBJ_ (1 samples, 0.32%)</title><rect x="4.4164%" y="805" width="0.3155%" height="15" fill="rgb(230,116,27)" fg:x="14" fg:w="1"/><text x="4.6664%" y="815.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo4core7summary17build_feature_map (1 samples, 0.32%)</title><rect x="4.7319%" y="805" width="0.3155%" height="15" fill="rgb(228,99,48)" fg:x="15" fg:w="1"/><text x="4.9819%" y="815.50"></text></g><g><title>_RNCNvMs_NtNtNtCsjrgk26VM9Gl_5cargo7sources8registry5indexNtB6_13RegistryIndex9summariess_0Bc_ (3 samples, 0.95%)</title><rect x="4.4164%" y="837" width="0.9464%" height="15" fill="rgb(253,11,6)" fg:x="14" fg:w="3"/><text x="4.6664%" y="847.50"></text></g><g><title>_RNvMs4_NtNtNtCsjrgk26VM9Gl_5cargo7sources8registry5indexNtB5_12IndexSummary5parse (3 samples, 0.95%)</title><rect x="4.4164%" y="821" width="0.9464%" height="15" fill="rgb(247,143,39)" fg:x="14" fg:w="3"/><text x="4.6664%" y="831.50"></text></g><g><title>_RNvXs1_Cs8fIk95bdzt5_14cargo_platformNtB5_8PlatformNtNtNtCsewSY1tgGK6q_4core3str6traits7FromStr8from_str (1 samples, 0.32%)</title><rect x="5.0473%" y="805" width="0.3155%" height="15" fill="rgb(236,97,10)" fg:x="16" fg:w="1"/><text x="5.2973%" y="815.50"></text></g><g><title>_RNvXs1_NtCs8fIk95bdzt5_14cargo_platform3cfgNtB5_7CfgExprNtNtNtCsewSY1tgGK6q_4core3str6traits7FromStr8from_str (1 samples, 0.32%)</title><rect x="5.0473%" y="789" width="0.3155%" height="15" fill="rgb(233,208,19)" fg:x="16" fg:w="1"/><text x="5.2973%" y="799.50"></text></g><g><title>_RNCNvXs_NtNtCsjrgk26VM9Gl_5cargo4core8registryNtB6_15PackageRegistryNtB6_8Registry5querys0_0Ba_ (1 samples, 0.32%)</title><rect x="5.3628%" y="805" width="0.3155%" height="15" fill="rgb(216,164,2)" fg:x="17" fg:w="1"/><text x="5.6128%" y="815.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo4core8registry4lock (1 samples, 0.32%)</title><rect x="5.3628%" y="789" width="0.3155%" height="15" fill="rgb(220,129,5)" fg:x="17" fg:w="1"/><text x="5.6128%" y="799.50"></text></g><g><title>_RNvMs1_NtNtCsjrgk26VM9Gl_5cargo4core10dependencyNtB5_10Dependency7lock_to (1 samples, 0.32%)</title><rect x="5.3628%" y="773" width="0.3155%" height="15" fill="rgb(242,17,10)" fg:x="17" fg:w="1"/><text x="5.6128%" y="783.50"></text></g><g><title>_RNvMs_NtNtCsjrgk26VM9Gl_5cargo4util10semver_extNtB4_13OptVersionReq7lock_to (1 samples, 0.32%)</title><rect x="5.3628%" y="757" width="0.3155%" height="15" fill="rgb(242,107,0)" fg:x="17" fg:w="1"/><text x="5.6128%" y="767.50"></text></g><g><title>_RNvMs4_NtNtCsjrgk26VM9Gl_5cargo4core10package_idNtB5_9PackageId3new (1 samples, 0.32%)</title><rect x="5.6782%" y="789" width="0.3155%" height="15" fill="rgb(251,28,31)" fg:x="18" fg:w="1"/><text x="5.9282%" y="799.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo4core8resolver18activate_deps_loop (8 samples, 2.52%)</title><rect x="3.7855%" y="965" width="2.5237%" height="15" fill="rgb(233,223,10)" fg:x="12" fg:w="8"/><text x="4.0355%" y="975.50">_R..</text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo4core8resolver8activate (8 samples, 2.52%)</title><rect x="3.7855%" y="949" width="2.5237%" height="15" fill="rgb(215,21,27)" fg:x="12" fg:w="8"/><text x="4.0355%" y="959.50">_R..</text></g><g><title>_RNvXNtNtCsewSY1tgGK6q_4core4iter8adaptersINtB2_12GenericShuntINtNtB2_10filter_map9FilterMapINtNtNtCsh2sH3M5QVbG_5alloc3vec9into_iter8IntoIterTNtNtNtCsjrgk26VM9Gl_5cargo4core10dependency10DependencyINtNtB1y_2rc2RcINtNtNtNtB1y_11collections5btree3set8BTreeSetNtNtNtB2m_4util9interning14InternedStringEEEENCNvMNtNtB2k_8resolver9dep_cacheNtB4V_15RegistryQueryer10build_deps0EINtNtB6_6result6ResultNtNtB6_7convert10InfallibleNtCsba45E03pTaB_6anyhow5ErrorEENtNtNtB4_6traits8iterator8Iterator4nextB2m_ (7 samples, 2.21%)</title><rect x="4.1009%" y="933" width="2.2082%" height="15" fill="rgb(232,23,21)" fg:x="13" fg:w="7"/><text x="4.3509%" y="943.50">_..</text></g><g><title>_RNvMNtNtNtCsjrgk26VM9Gl_5cargo4core8resolver9dep_cacheNtB2_15RegistryQueryer5query (7 samples, 2.21%)</title><rect x="4.1009%" y="917" width="2.2082%" height="15" fill="rgb(244,5,23)" fg:x="13" fg:w="7"/><text x="4.3509%" y="927.50">_..</text></g><g><title>_RNvXs_NtNtCsjrgk26VM9Gl_5cargo4core8registryNtB4_15PackageRegistryNtB4_8Registry5query (6 samples, 1.89%)</title><rect x="4.4164%" y="901" width="1.8927%" height="15" fill="rgb(226,81,46)" fg:x="14" fg:w="6"/><text x="4.6664%" y="911.50">_..</text></g><g><title>_RNvXs_NtNtCsjrgk26VM9Gl_5cargo7sources8replacedNtB4_14ReplacedSourceNtNtB6_6source6Source5query (6 samples, 1.89%)</title><rect x="4.4164%" y="885" width="1.8927%" height="15" fill="rgb(247,70,30)" fg:x="14" fg:w="6"/><text x="4.6664%" y="895.50">_..</text></g><g><title>_RNvXs_NtNtCsjrgk26VM9Gl_5cargo7sources8registryNtB4_14RegistrySourceNtNtB6_6source6Source5query (6 samples, 1.89%)</title><rect x="4.4164%" y="869" width="1.8927%" height="15" fill="rgb(212,68,19)" fg:x="14" fg:w="6"/><text x="4.6664%" y="879.50">_..</text></g><g><title>_RNvMs_NtNtNtCsjrgk26VM9Gl_5cargo7sources8registry5indexNtB4_13RegistryIndex23query_inner_with_online (6 samples, 1.89%)</title><rect x="4.4164%" y="853" width="1.8927%" height="15" fill="rgb(240,187,13)" fg:x="14" fg:w="6"/><text x="4.6664%" y="863.50">_..</text></g><g><title>_RNCNvXs_NtNtCsjrgk26VM9Gl_5cargo7sources8registryNtB6_14RegistrySourceNtNtB8_6source6Source5querys0_0Ba_ (3 samples, 0.95%)</title><rect x="5.3628%" y="837" width="0.9464%" height="15" fill="rgb(223,113,26)" fg:x="17" fg:w="3"/><text x="5.6128%" y="847.50"></text></g><g><title>_RNCNvXs_NtNtCsjrgk26VM9Gl_5cargo7sources8replacedNtB6_14ReplacedSourceNtNtB8_6source6Source5query0Ba_ (3 samples, 0.95%)</title><rect x="5.3628%" y="821" width="0.9464%" height="15" fill="rgb(206,192,2)" fg:x="17" fg:w="3"/><text x="5.6128%" y="831.50"></text></g><g><title>_RNvMNtNtCsjrgk26VM9Gl_5cargo4core7summaryNtB2_7Summary10map_source (2 samples, 0.63%)</title><rect x="5.6782%" y="805" width="0.6309%" height="15" fill="rgb(241,108,4)" fg:x="18" fg:w="2"/><text x="5.9282%" y="815.50"></text></g><g><title>_RNvMse_NtCsh2sH3M5QVbG_5alloc2rcINtB5_2RcNtNtNtCsjrgk26VM9Gl_5cargo4core10dependency5InnerE8make_mutBJ_ (1 samples, 0.32%)</title><rect x="5.9937%" y="789" width="0.3155%" height="15" fill="rgb(247,173,49)" fg:x="19" fg:w="1"/><text x="6.2437%" y="799.50"></text></g><g><title>_RNvXs6_NtNtCsjrgk26VM9Gl_5cargo4util10semver_extNtB5_13OptVersionReqNtNtCsewSY1tgGK6q_4core5clone5Clone5clone (1 samples, 0.32%)</title><rect x="5.9937%" y="773" width="0.3155%" height="15" fill="rgb(224,114,35)" fg:x="19" fg:w="1"/><text x="6.2437%" y="783.50"></text></g><g><title>_RINvXs3_NtCs17R7Md97ctu_5serde2deINtNtCsewSY1tgGK6q_4core6marker11PhantomDataINtNtCsh2sH3M5QVbG_5alloc3vec3VecNtNtNtCsjrgk26VM9Gl_5cargo4util9interning14InternedStringEENtB6_15DeserializeSeed11deserializeQINtNtCs9YnFLKp3bfh_10serde_json2de12DeserializerNtNtB3m_4read9SliceReadEEB1Q_ (1 samples, 0.32%)</title><rect x="6.6246%" y="789" width="0.3155%" height="15" fill="rgb(245,159,27)" fg:x="21" fg:w="1"/><text x="6.8746%" y="799.50"></text></g><g><title>_RNvMs0_NtCsh2sH3M5QVbG_5alloc7raw_vecINtB5_6RawVecINtNtNtCs5qFqTRwIjNH_5im_rc5nodes5btree8IterItemTNtNtNtCsjrgk26VM9Gl_5cargo4core10package_id9PackageIdINtNtNtBT_3ord3map6OrdMapB1z_INtNtNtNtCs93HjBDhGDHo_3std11collections4hash3set7HashSetNtNtB1D_10dependency10DependencyEEEEE16reserve_for_pushB1F_ (1 samples, 0.32%)</title><rect x="6.6246%" y="773" width="0.3155%" height="15" fill="rgb(245,172,44)" fg:x="21" fg:w="1"/><text x="6.8746%" y="783.50"></text></g><g><title>_RINvNtCsh2sH3M5QVbG_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="6.6246%" y="757" width="0.3155%" height="15" fill="rgb(236,23,11)" fg:x="21" fg:w="1"/><text x="6.8746%" y="767.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo4core8resolver8activate (3 samples, 0.95%)</title><rect x="6.3091%" y="965" width="0.9464%" height="15" fill="rgb(205,117,38)" fg:x="20" fg:w="3"/><text x="6.5591%" y="975.50"></text></g><g><title>_RNvXNtNtCsewSY1tgGK6q_4core4iter8adaptersINtB2_12GenericShuntINtNtB2_10filter_map9FilterMapINtNtNtCsh2sH3M5QVbG_5alloc3vec9into_iter8IntoIterTNtNtNtCsjrgk26VM9Gl_5cargo4core10dependency10DependencyINtNtB1y_2rc2RcINtNtNtNtB1y_11collections5btree3set8BTreeSetNtNtNtB2m_4util9interning14InternedStringEEEENCNvMNtNtB2k_8resolver9dep_cacheNtB4V_15RegistryQueryer10build_deps0EINtNtB6_6result6ResultNtNtB6_7convert10InfallibleNtCsba45E03pTaB_6anyhow5ErrorEENtNtNtB4_6traits8iterator8Iterator4nextB2m_ (3 samples, 0.95%)</title><rect x="6.3091%" y="949" width="0.9464%" height="15" fill="rgb(237,72,25)" fg:x="20" fg:w="3"/><text x="6.5591%" y="959.50"></text></g><g><title>_RNvMNtNtNtCsjrgk26VM9Gl_5cargo4core8resolver9dep_cacheNtB2_15RegistryQueryer5query (3 samples, 0.95%)</title><rect x="6.3091%" y="933" width="0.9464%" height="15" fill="rgb(244,70,9)" fg:x="20" fg:w="3"/><text x="6.5591%" y="943.50"></text></g><g><title>_RNvXs_NtNtCsjrgk26VM9Gl_5cargo4core8registryNtB4_15PackageRegistryNtB4_8Registry5query (3 samples, 0.95%)</title><rect x="6.3091%" y="917" width="0.9464%" height="15" fill="rgb(217,125,39)" fg:x="20" fg:w="3"/><text x="6.5591%" y="927.50"></text></g><g><title>_RNvXs_NtNtCsjrgk26VM9Gl_5cargo7sources8replacedNtB4_14ReplacedSourceNtNtB6_6source6Source5query (3 samples, 0.95%)</title><rect x="6.3091%" y="901" width="0.9464%" height="15" fill="rgb(235,36,10)" fg:x="20" fg:w="3"/><text x="6.5591%" y="911.50"></text></g><g><title>_RNvXs_NtNtCsjrgk26VM9Gl_5cargo7sources8registryNtB4_14RegistrySourceNtNtB6_6source6Source5query (3 samples, 0.95%)</title><rect x="6.3091%" y="885" width="0.9464%" height="15" fill="rgb(251,123,47)" fg:x="20" fg:w="3"/><text x="6.5591%" y="895.50"></text></g><g><title>_RNvMs_NtNtNtCsjrgk26VM9Gl_5cargo7sources8registry5indexNtB4_13RegistryIndex23query_inner_with_online (3 samples, 0.95%)</title><rect x="6.3091%" y="869" width="0.9464%" height="15" fill="rgb(221,13,13)" fg:x="20" fg:w="3"/><text x="6.5591%" y="879.50"></text></g><g><title>_RNCNvMs_NtNtNtCsjrgk26VM9Gl_5cargo7sources8registry5indexNtB6_13RegistryIndex9summariess_0Bc_ (3 samples, 0.95%)</title><rect x="6.3091%" y="853" width="0.9464%" height="15" fill="rgb(238,131,9)" fg:x="20" fg:w="3"/><text x="6.5591%" y="863.50"></text></g><g><title>_RNvMs4_NtNtNtCsjrgk26VM9Gl_5cargo7sources8registry5indexNtB5_12IndexSummary5parse (3 samples, 0.95%)</title><rect x="6.3091%" y="837" width="0.9464%" height="15" fill="rgb(211,50,8)" fg:x="20" fg:w="3"/><text x="6.5591%" y="847.50"></text></g><g><title>_RINvXNvNtNtNtCsjrgk26VM9Gl_5cargo7sources8registry5index1__NtB5_12IndexPackageNtNtCs17R7Md97ctu_5serde2de11Deserialize11deserializeQINtNtCs9YnFLKp3bfh_10serde_json2de12DeserializerNtNtB2b_4read9SliceReadEEBb_ (3 samples, 0.95%)</title><rect x="6.3091%" y="821" width="0.9464%" height="15" fill="rgb(245,182,24)" fg:x="20" fg:w="3"/><text x="6.5591%" y="831.50"></text></g><g><title>_RINvXs31_NtNtCs17R7Md97ctu_5serde2de5implsINtNtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3map8BTreeMapNtNtNtCsjrgk26VM9Gl_5cargo4util9interning14InternedStringINtNtBN_3vec3VecB1D_EENtB9_11Deserialize11deserializeQINtNtCs9YnFLKp3bfh_10serde_json2de12DeserializerNtNtB3v_4read9SliceReadEEB1J_ (3 samples, 0.95%)</title><rect x="6.3091%" y="805" width="0.9464%" height="15" fill="rgb(242,14,37)" fg:x="20" fg:w="3"/><text x="6.5591%" y="815.50"></text></g><g><title>_RINvXs_Cs6gyOsecib5X_14serde_untaggedINtB5_19UntaggedEnumVisitorNtNtNtCsjrgk26VM9Gl_5cargo4util9interning14InternedStringENtNtCs17R7Md97ctu_5serde2de7Visitor18visit_borrowed_strNtNtCs9YnFLKp3bfh_10serde_json5error5ErrorEB16_ (1 samples, 0.32%)</title><rect x="6.9401%" y="789" width="0.3155%" height="15" fill="rgb(246,228,12)" fg:x="22" fg:w="1"/><text x="7.1901%" y="799.50"></text></g><g><title>_RINvXs_Cs6gyOsecib5X_14serde_untaggedINtB5_19UntaggedEnumVisitorNtNtNtCsjrgk26VM9Gl_5cargo4util9interning14InternedStringENtNtCs17R7Md97ctu_5serde2de7Visitor9visit_strNtNtCs9YnFLKp3bfh_10serde_json5error5ErrorEB16_ (1 samples, 0.32%)</title><rect x="6.9401%" y="773" width="0.3155%" height="15" fill="rgb(213,55,15)" fg:x="22" fg:w="1"/><text x="7.1901%" y="783.50"></text></g><g><title>_RNSNvYNCINvXsh_NtNtCsjrgk26VM9Gl_5cargo4util9interningNtBd_14InternedStringNtNtCs17R7Md97ctu_5serde2de11Deserialize11deserializeINtNtCs9YnFLKp3bfh_10serde_json2de6MapKeyNtNtB27_4read9SliceReadEE0INtNtNtCsewSY1tgGK6q_4core3ops8function6FnOnceTReEE9call_once6vtableBh_ (1 samples, 0.32%)</title><rect x="6.9401%" y="757" width="0.3155%" height="15" fill="rgb(209,9,3)" fg:x="22" fg:w="1"/><text x="7.1901%" y="767.50"></text></g><g><title>_RNvMs5_NtNtCsjrgk26VM9Gl_5cargo4util9interningNtB5_14InternedString3new (1 samples, 0.32%)</title><rect x="6.9401%" y="741" width="0.3155%" height="15" fill="rgb(230,59,30)" fg:x="22" fg:w="1"/><text x="7.1901%" y="751.50"></text></g><g><title>_RNvMs1_NtCsa7jAvkiL5p8_9hashbrown3mapINtB5_7HashMapReuNtNtNtCs93HjBDhGDHo_3std4hash6random11RandomStateE6insertCsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="6.9401%" y="725" width="0.3155%" height="15" fill="rgb(209,121,21)" fg:x="22" fg:w="1"/><text x="7.1901%" y="735.50"></text></g><g><title>_RINvMs6_NtCsa7jAvkiL5p8_9hashbrown3rawINtB6_8RawTableTReuEE14reserve_rehashNCINvNtB8_3map11make_hasherBQ_uNtNtNtCs93HjBDhGDHo_3std4hash6random11RandomStateE0ECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="6.9401%" y="709" width="0.3155%" height="15" fill="rgb(220,109,13)" fg:x="22" fg:w="1"/><text x="7.1901%" y="719.50"></text></g><g><title>_RINvYNtNtNtCs93HjBDhGDHo_3std4hash6random11RandomStateNtNtCsewSY1tgGK6q_4core4hash11BuildHasher8hash_oneRNtNtNtCsjrgk26VM9Gl_5cargo4core20global_cache_tracker13RegistryIndexEB1L_ (1 samples, 0.32%)</title><rect x="6.9401%" y="693" width="0.3155%" height="15" fill="rgb(232,18,1)" fg:x="22" fg:w="1"/><text x="7.1901%" y="703.50"></text></g><g><title>_RINvXsb_CsibANuBsjU3t_13serde_ignoredINtB6_11TrackedSeedINtNtCsewSY1tgGK6q_4core6marker11PhantomDataINtNtBX_6option6OptionINtNtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3map8BTreeMapNtNtCscB7awYtk5YY_18cargo_util_schemas8manifest11FeatureNameINtNtB25_3vec3VecNtNtB25_6string6StringEEEENCNvNtNtCsjrgk26VM9Gl_5cargo4util4toml22read_manifest_from_str0ENtNtCs17R7Md97ctu_5serde2de15DeserializeSeed11deserializeNtNtNtCs5Om4XHNZ1uN_9toml_edit2de5value17ValueDeserializerEB4I_ (1 samples, 0.32%)</title><rect x="7.2555%" y="933" width="0.3155%" height="15" fill="rgb(215,41,42)" fg:x="23" fg:w="1"/><text x="7.5055%" y="943.50"></text></g><g><title>_RINvXNtNtCs5Om4XHNZ1uN_9toml_edit2de5tableNtB3_17TableDeserializerNtNtCs17R7Md97ctu_5serde2de12Deserializer15deserialize_anyINtCsibANuBsjU3t_13serde_ignored4WrapINtNvXs31_NtB14_5implsINtNtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3map8BTreeMapppENtB14_11Deserialize11deserialize10MapVisitorNtNtCscB7awYtk5YY_18cargo_util_schemas8manifest11FeatureNameINtNtB34_3vec3VecNtNtB34_6string6StringEENCNvNtNtCsjrgk26VM9Gl_5cargo4util4toml22read_manifest_from_str0EEB6q_ (1 samples, 0.32%)</title><rect x="7.2555%" y="917" width="0.3155%" height="15" fill="rgb(224,123,36)" fg:x="23" fg:w="1"/><text x="7.5055%" y="927.50"></text></g><g><title>_RNvNtCscB7awYtk5YY_18cargo_util_schemas16restricted_names21validate_feature_name (1 samples, 0.32%)</title><rect x="7.2555%" y="901" width="0.3155%" height="15" fill="rgb(240,125,3)" fg:x="23" fg:w="1"/><text x="7.5055%" y="911.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.32%)</title><rect x="7.2555%" y="885" width="0.3155%" height="15" fill="rgb(205,98,50)" fg:x="23" fg:w="1"/><text x="7.5055%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (1 samples, 0.32%)</title><rect x="7.2555%" y="869" width="0.3155%" height="15" fill="rgb(205,185,37)" fg:x="23" fg:w="1"/><text x="7.5055%" y="879.50"></text></g><g><title>core::ptr::align_offset (1 samples, 0.32%)</title><rect x="7.2555%" y="853" width="0.3155%" height="15" fill="rgb(238,207,15)" fg:x="23" fg:w="1"/><text x="7.5055%" y="863.50"></text></g><g><title>_RINvXs0_NvXNvNtCscB7awYtk5YY_18cargo_util_schemas8manifest1__NtBb_12TomlManifestNtNtCs17R7Md97ctu_5serde2de11Deserialize11deserializeNtB6_9___VisitorNtB1i_7Visitor9visit_mapINtCsibANuBsjU3t_13serde_ignored9MapAccessNtNtNtCs5Om4XHNZ1uN_9toml_edit2de5table14TableMapAccessNCNvNtNtCsjrgk26VM9Gl_5cargo4util4toml22read_manifest_from_str0EEB4s_ (2 samples, 0.63%)</title><rect x="7.2555%" y="949" width="0.6309%" height="15" fill="rgb(213,199,42)" fg:x="23" fg:w="2"/><text x="7.5055%" y="959.50"></text></g><g><title>_RINvYINtCsibANuBsjU3t_13serde_ignored9MapAccessNtNtNtCs5Om4XHNZ1uN_9toml_edit2de5table14TableMapAccessNCNvNtNtCsjrgk26VM9Gl_5cargo4util4toml22read_manifest_from_str0ENtNtCs17R7Md97ctu_5serde2de9MapAccess10next_valueINtNtCsewSY1tgGK6q_4core6option6OptionINtNtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3map8BTreeMapNtNtCscB7awYtk5YY_18cargo_util_schemas8manifest11PackageNameNtB54_21InheritableDependencyEEEB1K_ (1 samples, 0.32%)</title><rect x="7.5710%" y="933" width="0.3155%" height="15" fill="rgb(235,201,11)" fg:x="24" fg:w="1"/><text x="7.8210%" y="943.50"></text></g><g><title>_RINvXsb_CsibANuBsjU3t_13serde_ignoredINtB6_11TrackedSeedINtNtCsewSY1tgGK6q_4core6marker11PhantomDataINtNtBX_6option6OptionINtNtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3map8BTreeMapNtNtCscB7awYtk5YY_18cargo_util_schemas8manifest11PackageNameNtB2X_21InheritableDependencyEEENCNvNtNtCsjrgk26VM9Gl_5cargo4util4toml22read_manifest_from_str0ENtNtCs17R7Md97ctu_5serde2de15DeserializeSeed11deserializeNtNtNtCs5Om4XHNZ1uN_9toml_edit2de5value17ValueDeserializerEB4x_ (1 samples, 0.32%)</title><rect x="7.5710%" y="917" width="0.3155%" height="15" fill="rgb(207,46,11)" fg:x="24" fg:w="1"/><text x="7.8210%" y="927.50"></text></g><g><title>_RINvXNtNtCs5Om4XHNZ1uN_9toml_edit2de5tableNtB3_17TableDeserializerNtNtCs17R7Md97ctu_5serde2de12Deserializer15deserialize_anyINtCsibANuBsjU3t_13serde_ignored4WrapINtNvXs31_NtB14_5implsINtNtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3map8BTreeMapppENtB14_11Deserialize11deserialize10MapVisitorNtNtCscB7awYtk5YY_18cargo_util_schemas8manifest11PackageNameNtB4H_21InheritableDependencyENCNvNtNtCsjrgk26VM9Gl_5cargo4util4toml22read_manifest_from_str0EEB6f_ (1 samples, 0.32%)</title><rect x="7.5710%" y="901" width="0.3155%" height="15" fill="rgb(241,35,35)" fg:x="24" fg:w="1"/><text x="7.8210%" y="911.50"></text></g><g><title>_RINvXs9_NtCs1olihwANVf1_11serde_value2deINtB6_17ValueDeserializerNtNtCs5Om4XHNZ1uN_9toml_edit2de5ErrorENtNtCs17R7Md97ctu_5serde2de12Deserializer15deserialize_anyNtNvXNvNtCscB7awYtk5YY_18cargo_util_schemas8manifestsc_1__NtB2G_23TomlInheritedDependencyNtB1F_11Deserialize11deserialize9___VisitorECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="7.5710%" y="885" width="0.3155%" height="15" fill="rgb(243,32,47)" fg:x="24" fg:w="1"/><text x="7.8210%" y="895.50"></text></g><g><title>_RINvMNtNtCsjrgk26VM9Gl_5cargo4core7summaryNtB3_7Summary3newReEB7_ (1 samples, 0.32%)</title><rect x="8.2019%" y="933" width="0.3155%" height="15" fill="rgb(247,202,23)" fg:x="26" fg:w="1"/><text x="8.4519%" y="943.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo4core7summary17build_feature_map (1 samples, 0.32%)</title><rect x="8.2019%" y="917" width="0.3155%" height="15" fill="rgb(219,102,11)" fg:x="26" fg:w="1"/><text x="8.4519%" y="927.50"></text></g><g><title>_RINvMsi_NtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3mapINtB6_8BTreeMapNtNtNtCsjrgk26VM9Gl_5cargo4util9interning14InternedStringINtNtBc_3vec3VecNtNtNtB1e_4core7summary12FeatureValueEE3geteEB1e_ (1 samples, 0.32%)</title><rect x="8.5174%" y="933" width="0.3155%" height="15" fill="rgb(243,110,44)" fg:x="27" fg:w="1"/><text x="8.7674%" y="943.50"></text></g><g><title>_RNvNvNtNtCsjrgk26VM9Gl_5cargo4util4toml16to_real_manifest20process_dependencies (1 samples, 0.32%)</title><rect x="8.8328%" y="933" width="0.3155%" height="15" fill="rgb(222,74,54)" fg:x="28" fg:w="1"/><text x="9.0828%" y="943.50"></text></g><g><title>_RINvNtNtCsjrgk26VM9Gl_5cargo4util4toml26detailed_dep_to_dependencyNtNtCsh2sH3M5QVbG_5alloc6string6StringEB6_ (1 samples, 0.32%)</title><rect x="8.8328%" y="917" width="0.3155%" height="15" fill="rgb(216,99,12)" fg:x="28" fg:w="1"/><text x="9.0828%" y="927.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo4util4toml16to_real_manifest (5 samples, 1.58%)</title><rect x="7.8864%" y="949" width="1.5773%" height="15" fill="rgb(226,22,26)" fg:x="25" fg:w="5"/><text x="8.1364%" y="959.50"></text></g><g><title>_RNvXsa_NtCsh2sH3M5QVbG_5alloc5boxedINtB5_3BoxNtNtCscB7awYtk5YY_18cargo_util_schemas8manifest11TomlPackageENtNtCsewSY1tgGK6q_4core5clone5Clone5cloneCsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="9.1483%" y="933" width="0.3155%" height="15" fill="rgb(217,163,10)" fg:x="29" fg:w="1"/><text x="9.3983%" y="943.50"></text></g><g><title>_RNvXsI_NtCs8yljfUQn3dh_4toml5valueNtB5_5ValueNtNtCsewSY1tgGK6q_4core5clone5Clone5clone (1 samples, 0.32%)</title><rect x="9.1483%" y="917" width="0.3155%" height="15" fill="rgb(213,25,53)" fg:x="29" fg:w="1"/><text x="9.3983%" y="927.50"></text></g><g><title>_RINvNvXs0_NtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCsewSY1tgGK6q_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringNtNtCs8yljfUQn3dh_4toml5value5ValueNtNtBe_5alloc6GlobalECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="9.1483%" y="901" width="0.3155%" height="15" fill="rgb(252,105,26)" fg:x="29" fg:w="1"/><text x="9.3983%" y="911.50"></text></g><g><title>_RNvXsI_NtCs8yljfUQn3dh_4toml5valueNtB5_5ValueNtNtCsewSY1tgGK6q_4core5clone5Clone5clone (1 samples, 0.32%)</title><rect x="9.1483%" y="885" width="0.3155%" height="15" fill="rgb(220,39,43)" fg:x="29" fg:w="1"/><text x="9.3983%" y="895.50"></text></g><g><title>_RINvNvXs0_NtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCsewSY1tgGK6q_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringNtNtCs8yljfUQn3dh_4toml5value5ValueNtNtBe_5alloc6GlobalECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="9.1483%" y="869" width="0.3155%" height="15" fill="rgb(229,68,48)" fg:x="29" fg:w="1"/><text x="9.3983%" y="879.50"></text></g><g><title>_RNvXsI_NtCs8yljfUQn3dh_4toml5valueNtB5_5ValueNtNtCsewSY1tgGK6q_4core5clone5Clone5clone (1 samples, 0.32%)</title><rect x="9.1483%" y="853" width="0.3155%" height="15" fill="rgb(252,8,32)" fg:x="29" fg:w="1"/><text x="9.3983%" y="863.50"></text></g><g><title>_RINvNvXs0_NtNtNtCsh2sH3M5QVbG_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCsewSY1tgGK6q_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringNtNtCs8yljfUQn3dh_4toml5value5ValueNtNtBe_5alloc6GlobalECsjrgk26VM9Gl_5cargo (1 samples, 0.32%)</title><rect x="9.1483%" y="837" width="0.3155%" height="15" fill="rgb(223,20,43)" fg:x="29" fg:w="1"/><text x="9.3983%" y="847.50"></text></g><g><title>_RNvXsI_NtCs8yljfUQn3dh_4toml5valueNtB5_5ValueNtNtCsewSY1tgGK6q_4core5clone5Clone5clone (1 samples, 0.32%)</title><rect x="9.1483%" y="821" width="0.3155%" height="15" fill="rgb(229,81,49)" fg:x="29" fg:w="1"/><text x="9.3983%" y="831.50"></text></g><g><title>_RNvXsI_NtCs8yljfUQn3dh_4toml5valueNtB5_5ValueNtNtCsewSY1tgGK6q_4core5clone5Clone5clone (1 samples, 0.32%)</title><rect x="9.1483%" y="805" width="0.3155%" height="15" fill="rgb(236,28,36)" fg:x="29" fg:w="1"/><text x="9.3983%" y="815.50"></text></g><g><title>_RNvNtNtCsjrgk26VM9Gl_5cargo4util4toml13read_manifest (8 samples, 2.52%)</title><rect x="7.2555%" y="965" width="2.5237%" height="15" fill="rgb(249,185,26)" fg:x="23" fg:w="8"/><text x="7.5055%" y="975.50">_R..</text></g><g><title>_RNvXs5_NtCs5Om4XHNZ1uN_9toml_edit2deNtB5_12DeserializerNtNtNtCsewSY1tgGK6q_4core3str6traits7FromStr8from_str (1 samples, 0.32%)</title><rect x="9.4637%" y="949" width="0.3155%" height="15" fill="rgb(249,174,33)" fg:x="30" fg:w="1"/><text x="9.7137%" y="959.50"></text></g><g><title>_RNvNtCs5Om4XHNZ1uN_9toml_edit6parser14parse_document (1 samples, 0.32%)</title><rect x="9.4637%" y="933" width="0.3155%" height="15" fill="rgb(233,201,37)" fg:x="30" fg:w="1"/><text x="9.7137%" y="943.50"></text></g><g><title>_RNCINvNtNtCs9pqBtHe4HRq_6winnow10combinator5multi6repeatINtNtB8_6stream7LocatedRNtBV_4BStrETuuEuNtNtB8_5error12ContextErrorTNCNvNtNtCs5Om4XHNZ1uN_9toml_edit6parser8document8documents0_0NCNvB22_8parse_ws0EINtNtNtCsewSY1tgGK6q_4core3ops5range9RangeFromjEE0B26_ (1 samples, 0.32%)</title><rect x="9.4637%" y="917" width="0.3155%" height="15" fill="rgb(221,78,26)" fg:x="30" fg:w="1"/><text x="9.7137%" y="927.50"></text></g><g><title>_RNvNtNtCs5Om4XHNZ1uN_9toml_edit6parser8document12parse_keyval (1 samples, 0.32%)</title><rect x="9.4637%" y="901" width="0.3155%" height="15" fill="rgb(250,127,30)" fg:x="30" fg:w="1"/><text x="9.7137%" y="911.50"></text></g><g><title>_RNvXsr_NtNtCs9pqBtHe4HRq_6winnow10combinator6parserINtB5_8WithSpanNCNCNvNtNtCs5Om4XHNZ1uN_9toml_edit6parser5value5value0s_0INtNtB9_6stream7LocatedRNtB20_4BStrENtNtB1c_5value5ValueNtNtB9_5error12ContextErrorEINtNtB9_6parser6ParserB1X_TB2x_INtNtNtCsewSY1tgGK6q_4core3ops5range5RangejEEB2R_E10parse_nextB1c_ (1 samples, 0.32%)</title><rect x="9.4637%" y="885" width="0.3155%" height="15" fill="rgb(230,49,44)" fg:x="30" fg:w="1"/><text x="9.7137%" y="895.50"></text></g><g><title>_RNvNtNtCs5Om4XHNZ1uN_9toml_edit6parser7strings6string (1 samples, 0.32%)</title><rect x="9.4637%" y="869" width="0.3155%" height="15" fill="rgb(229,67,23)" fg:x="30" fg:w="1"/><text x="9.7137%" y="879.50"></text></g><g><title>_RNCINvNtNtCs9pqBtHe4HRq_6winnow10combinator4core3optINtNtB8_6stream7LocatedRNtBR_4BStrEINtNtCsh2sH3M5QVbG_5alloc6borrow3CoweENtNtB8_5error12ContextErrorNvNtNtCs5Om4XHNZ1uN_9toml_edit6parser7strings11basic_charsE0B2w_ (1 samples, 0.32%)</title><rect x="9.4637%" y="853" width="0.3155%" height="15" fill="rgb(249,83,47)" fg:x="30" fg:w="1"/><text x="9.7137%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1 samples, 0.32%)</title><rect x="9.7792%" y="965" width="0.3155%" height="15" fill="rgb(215,43,3)" fg:x="31" fg:w="1"/><text x="10.0292%" y="975.50"></text></g><g><title>ASN1_item_d2i (1 samples, 0.32%)</title><rect x="10.0946%" y="565" width="0.3155%" height="15" fill="rgb(238,154,13)" fg:x="32" fg:w="1"/><text x="10.3446%" y="575.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.32%)</title><rect x="10.0946%" y="549" width="0.3155%" height="15" fill="rgb(219,56,2)" fg:x="32" fg:w="1"/><text x="10.3446%" y="559.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.32%)</title><rect x="10.0946%" y="533" width="0.3155%" height="15" fill="rgb(233,0,4)" fg:x="32" fg:w="1"/><text x="10.3446%" y="543.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.32%)</title><rect x="10.0946%" y="517" width="0.3155%" height="15" fill="rgb(235,30,7)" fg:x="32" fg:w="1"/><text x="10.3446%" y="527.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.32%)</title><rect x="10.0946%" y="501" width="0.3155%" height="15" fill="rgb(250,79,13)" fg:x="32" fg:w="1"/><text x="10.3446%" y="511.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.32%)</title><rect x="10.0946%" y="485" width="0.3155%" height="15" fill="rgb(211,146,34)" fg:x="32" fg:w="1"/><text x="10.3446%" y="495.50"></text></g><g><title>pubkey_cb (1 samples, 0.32%)</title><rect x="10.0946%" y="469" width="0.3155%" height="15" fill="rgb(228,22,38)" fg:x="32" fg:w="1"/><text x="10.3446%" y="479.50"></text></g><g><title>x509_pubkey_decode (1 samples, 0.32%)</title><rect x="10.0946%" y="453" width="0.3155%" height="15" fill="rgb(235,168,5)" fg:x="32" fg:w="1"/><text x="10.3446%" y="463.50"></text></g><g><title>eckey_pub_decode (1 samples, 0.32%)</title><rect x="10.0946%" y="437" width="0.3155%" height="15" fill="rgb(221,155,16)" fg:x="32" fg:w="1"/><text x="10.3446%" y="447.50"></text></g><g><title>eckey_type2param (1 samples, 0.32%)</title><rect x="10.0946%" y="421" width="0.3155%" height="15" fill="rgb(215,215,53)" fg:x="32" fg:w="1"/><text x="10.3446%" y="431.50"></text></g><g><title>EC_GROUP_new_by_curve_name (1 samples, 0.32%)</title><rect x="10.0946%" y="405" width="0.3155%" height="15" fill="rgb(223,4,10)" fg:x="32" fg:w="1"/><text x="10.3446%" y="415.50"></text></g><g><title>EC_POINT_set_affine_coordinates (1 samples, 0.32%)</title><rect x="10.0946%" y="389" width="0.3155%" height="15" fill="rgb(234,103,6)" fg:x="32" fg:w="1"/><text x="10.3446%" y="399.50"></text></g><g><title>ec_GFp_simple_set_Jprojective_coordinates_GFp (1 samples, 0.32%)</title><rect x="10.0946%" y="373" width="0.3155%" height="15" fill="rgb(227,97,0)" fg:x="32" fg:w="1"/><text x="10.3446%" y="383.50"></text></g><g><title>BN_mod_mul_montgomery (1 samples, 0.32%)</title><rect x="10.0946%" y="357" width="0.3155%" height="15" fill="rgb(234,150,53)" fg:x="32" fg:w="1"/><text x="10.3446%" y="367.50"></text></g><g><title>bn_mul_mont_fixed_top (1 samples, 0.32%)</title><rect x="10.0946%" y="341" width="0.3155%" height="15" fill="rgb(228,201,54)" fg:x="32" fg:w="1"/><text x="10.3446%" y="351.50"></text></g><g><title>bn_mul_mont (1 samples, 0.32%)</title><rect x="10.0946%" y="325" width="0.3155%" height="15" fill="rgb(222,22,37)" fg:x="32" fg:w="1"/><text x="10.3446%" y="335.50"></text></g><g><title>PEM_read_bio_ex (2 samples, 0.63%)</title><rect x="10.4101%" y="565" width="0.6309%" height="15" fill="rgb(237,53,32)" fg:x="33" fg:w="2"/><text x="10.6601%" y="575.50"></text></g><g><title>EVP_DecodeUpdate (2 samples, 0.63%)</title><rect x="10.4101%" y="549" width="0.6309%" height="15" fill="rgb(233,25,53)" fg:x="33" fg:w="2"/><text x="10.6601%" y="559.50"></text></g><g><title>asn1_d2i_ex_primitive (1 samples, 0.32%)</title><rect x="11.0410%" y="485" width="0.3155%" height="15" fill="rgb(210,40,34)" fg:x="35" fg:w="1"/><text x="11.2910%" y="495.50"></text></g><g><title>_RNvCsgEODShloEAT_5cargo8init_git (5 samples, 1.58%)</title><rect x="10.0946%" y="725" width="1.5773%" height="15" fill="rgb(241,220,44)" fg:x="32" fg:w="5"/><text x="10.3446%" y="735.50"></text></g><g><title>_RNvNtCs75q2XN40q9C_4git24opts27set_verify_owner_validation (5 samples, 1.58%)</title><rect x="10.0946%" y="709" width="1.5773%" height="15" fill="rgb(235,28,35)" fg:x="32" fg:w="5"/><text x="10.3446%" y="719.50"></text></g><g><title>_RNvCsbqEVhWtP5sN_11libgit2_sys4init (5 samples, 1.58%)</title><rect x="10.0946%" y="693" width="1.5773%" height="15" fill="rgb(210,56,17)" fg:x="32" fg:w="5"/><text x="10.3446%" y="703.50"></text></g><g><title>_RINvMs0_NtNtNtCs93HjBDhGDHo_3std10sys_common4once5futexNtB6_4Once4callNCINvMs0_NtNtBc_4sync4onceNtB1f_4Once9call_onceNCNvCsbqEVhWtP5sN_11libgit2_sys4init0E0EB1V_ (5 samples, 1.58%)</title><rect x="10.0946%" y="677" width="1.5773%" height="15" fill="rgb(224,130,29)" fg:x="32" fg:w="5"/><text x="10.3446%" y="687.50"></text></g><g><title>git_runtime_init (5 samples, 1.58%)</title><rect x="10.0946%" y="661" width="1.5773%" height="15" fill="rgb(235,212,8)" fg:x="32" fg:w="5"/><text x="10.3446%" y="671.50"></text></g><g><title>git_openssl_stream_global_init (5 samples, 1.58%)</title><rect x="10.0946%" y="645" width="1.5773%" height="15" fill="rgb(223,33,50)" fg:x="32" fg:w="5"/><text x="10.3446%" y="655.50"></text></g><g><title>X509_STORE_set_default_paths (5 samples, 1.58%)</title><rect x="10.0946%" y="629" width="1.5773%" height="15" fill="rgb(219,149,13)" fg:x="32" fg:w="5"/><text x="10.3446%" y="639.50"></text></g><g><title>by_file_ctrl (5 samples, 1.58%)</title><rect x="10.0946%" y="613" width="1.5773%" height="15" fill="rgb(250,156,29)" fg:x="32" fg:w="5"/><text x="10.3446%" y="623.50"></text></g><g><title>X509_load_cert_crl_file (5 samples, 1.58%)</title><rect x="10.0946%" y="597" width="1.5773%" height="15" fill="rgb(216,193,19)" fg:x="32" fg:w="5"/><text x="10.3446%" y="607.50"></text></g><g><title>PEM_X509_INFO_read_bio (5 samples, 1.58%)</title><rect x="10.0946%" y="581" width="1.5773%" height="15" fill="rgb(216,135,14)" fg:x="32" fg:w="5"/><text x="10.3446%" y="591.50"></text></g><g><title>d2i_X509_AUX (2 samples, 0.63%)</title><rect x="11.0410%" y="565" width="0.6309%" height="15" fill="rgb(241,47,5)" fg:x="35" fg:w="2"/><text x="11.2910%" y="575.50"></text></g><g><title>ASN1_item_d2i (2 samples, 0.63%)</title><rect x="11.0410%" y="549" width="0.6309%" height="15" fill="rgb(233,42,35)" fg:x="35" fg:w="2"/><text x="11.2910%" y="559.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.63%)</title><rect x="11.0410%" y="533" width="0.6309%" height="15" fill="rgb(231,13,6)" fg:x="35" fg:w="2"/><text x="11.2910%" y="543.50"></text></g><g><title>asn1_template_noexp_d2i (2 samples, 0.63%)</title><rect x="11.0410%" y="517" width="0.6309%" height="15" fill="rgb(207,181,40)" fg:x="35" fg:w="2"/><text x="11.2910%" y="527.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.63%)</title><rect x="11.0410%" y="501" width="0.6309%" height="15" fill="rgb(254,173,49)" fg:x="35" fg:w="2"/><text x="11.2910%" y="511.50"></text></g><g><title>asn1_template_ex_d2i (1 samples, 0.32%)</title><rect x="11.3565%" y="485" width="0.3155%" height="15" fill="rgb(221,1,38)" fg:x="36" fg:w="1"/><text x="11.6065%" y="495.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.32%)</title><rect x="11.3565%" y="469" width="0.3155%" height="15" fill="rgb(206,124,46)" fg:x="36" fg:w="1"/><text x="11.6065%" y="479.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.32%)</title><rect x="11.3565%" y="453" width="0.3155%" height="15" fill="rgb(249,21,11)" fg:x="36" fg:w="1"/><text x="11.6065%" y="463.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.32%)</title><rect x="11.3565%" y="437" width="0.3155%" height="15" fill="rgb(222,201,40)" fg:x="36" fg:w="1"/><text x="11.6065%" y="447.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.32%)</title><rect x="11.3565%" y="421" width="0.3155%" height="15" fill="rgb(235,61,29)" fg:x="36" fg:w="1"/><text x="11.6065%" y="431.50"></text></g><g><title>asn1_d2i_ex_primitive (1 samples, 0.32%)</title><rect x="11.3565%" y="405" width="0.3155%" height="15" fill="rgb(219,207,3)" fg:x="36" fg:w="1"/><text x="11.6065%" y="415.50"></text></g><g><title>asn1_check_tlen (1 samples, 0.32%)</title><rect x="11.3565%" y="389" width="0.3155%" height="15" fill="rgb(222,56,46)" fg:x="36" fg:w="1"/><text x="11.6065%" y="399.50"></text></g><g><title>_RINvXs1G_NtNtCs17R7Md97ctu_5serde3ser5implsRNtNtNtCsjrgk26VM9Gl_5cargo4core7package17SerializedPackageNtB9_9Serialize9serializeQINtNtCs9YnFLKp3bfh_10serde_json3ser10SerializerQINtNtCsh2sH3M5QVbG_5alloc3vec3VechEEECsgEODShloEAT_5cargo (1 samples, 0.32%)</title><rect x="11.6719%" y="709" width="0.3155%" height="15" fill="rgb(239,76,54)" fg:x="37" fg:w="1"/><text x="11.9219%" y="719.50"></text></g><g><title>_RNvXs_NtCs9Hf7iz5kWU3_6semver7displayNtB6_10VersionReqNtNtCsewSY1tgGK6q_4core3fmt7Display3fmt (1 samples, 0.32%)</title><rect x="11.6719%" y="693" width="0.3155%" height="15" fill="rgb(231,124,27)" fg:x="37" fg:w="1"/><text x="11.9219%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.32%)</title><rect x="11.6719%" y="677" width="0.3155%" height="15" fill="rgb(249,195,6)" fg:x="37" fg:w="1"/><text x="11.9219%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.32%)</title><rect x="11.6719%" y="661" width="0.3155%" height="15" fill="rgb(237,174,47)" fg:x="37" fg:w="1"/><text x="11.9219%" y="671.50"></text></g><g><title>_RNvXs0_NtCs9Hf7iz5kWU3_6semver7displayNtB7_10ComparatorNtNtCsewSY1tgGK6q_4core3fmt7Display3fmt (1 samples, 0.32%)</title><rect x="11.6719%" y="645" width="0.3155%" height="15" fill="rgb(206,201,31)" fg:x="37" fg:w="1"/><text x="11.9219%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.32%)</title><rect x="11.6719%" y="629" width="0.3155%" height="15" fill="rgb(231,57,52)" fg:x="37" fg:w="1"/><text x="11.9219%" y="639.50"></text></g><g><title>_RNvNtNtCsgEODShloEAT_5cargo8commands8metadata4exec (3 samples, 0.95%)</title><rect x="11.6719%" y="725" width="0.9464%" height="15" fill="rgb(248,177,22)" fg:x="37" fg:w="3"/><text x="11.9219%" y="735.50"></text></g><g><title>_RNvXs1_NtCsjyLllZsoaBw_8anstream4autoINtB5_10AutoStreamNtNtNtCs93HjBDhGDHo_3std2io5stdio6StdoutENtBV_5Write9write_fmtCsjrgk26VM9Gl_5cargo (2 samples, 0.63%)</title><rect x="11.9874%" y="709" width="0.6309%" height="15" fill="rgb(215,211,37)" fg:x="38" fg:w="2"/><text x="12.2374%" y="719.50"></text></g><g><title>_RNvNtCsjyLllZsoaBw_8anstream5strip9write_fmt (2 samples, 0.63%)</title><rect x="11.9874%" y="693" width="0.6309%" height="15" fill="rgb(241,128,51)" fg:x="38" fg:w="2"/><text x="12.2374%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.63%)</title><rect x="11.9874%" y="677" width="0.6309%" height="15" fill="rgb(227,165,31)" fg:x="38" fg:w="2"/><text x="12.2374%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.63%)</title><rect x="11.9874%" y="661" width="0.6309%" height="15" fill="rgb(228,167,24)" fg:x="38" fg:w="2"/><text x="12.2374%" y="671.50"></text></g><g><title>_RNvXs_NtCsjyLllZsoaBw_8anstream3fmtINtB4_7AdapterNCNvNtB6_5strip9write_fmt0ENtNtCsewSY1tgGK6q_4core3fmt5Write9write_strB6_ (2 samples, 0.63%)</title><rect x="11.9874%" y="645" width="0.6309%" height="15" fill="rgb(228,143,12)" fg:x="38" fg:w="2"/><text x="12.2374%" y="655.50"></text></g><g><title>_RNvNtNtCsjyLllZsoaBw_8anstream7adapter5strip10next_bytes (2 samples, 0.63%)</title><rect x="11.9874%" y="629" width="0.6309%" height="15" fill="rgb(249,149,8)" fg:x="38" fg:w="2"/><text x="12.2374%" y="639.50"></text></g><g><title>__libc_start_call_main (9 samples, 2.84%)</title><rect x="10.0946%" y="965" width="2.8391%" height="15" fill="rgb(243,35,44)" fg:x="32" fg:w="9"/><text x="10.3446%" y="975.50">__..</text></g><g><title>main (9 samples, 2.84%)</title><rect x="10.0946%" y="949" width="2.8391%" height="15" fill="rgb(246,89,9)" fg:x="32" fg:w="9"/><text x="10.3446%" y="959.50">ma..</text></g><g><title>std::rt::lang_start_internal (9 samples, 2.84%)</title><rect x="10.0946%" y="933" width="2.8391%" height="15" fill="rgb(233,213,13)" fg:x="32" fg:w="9"/><text x="10.3446%" y="943.50">st..</text></g><g><title>std::panic::catch_unwind (9 samples, 2.84%)</title><rect x="10.0946%" y="917" width="2.8391%" height="15" fill="rgb(233,141,41)" fg:x="32" fg:w="9"/><text x="10.3446%" y="927.50">st..</text></g><g><title>std::panicking::try (9 samples, 2.84%)</title><rect x="10.0946%" y="901" width="2.8391%" height="15" fill="rgb(239,167,4)" fg:x="32" fg:w="9"/><text x="10.3446%" y="911.50">st..</text></g><g><title>std::panicking::try::do_call (9 samples, 2.84%)</title><rect x="10.0946%" y="885" width="2.8391%" height="15" fill="rgb(209,217,16)" fg:x="32" fg:w="9"/><text x="10.3446%" y="895.50">st..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (9 samples, 2.84%)</title><rect x="10.0946%" y="869" width="2.8391%" height="15" fill="rgb(219,88,35)" fg:x="32" fg:w="9"/><text x="10.3446%" y="879.50">st..</text></g><g><title>std::panic::catch_unwind (9 samples, 2.84%)</title><rect x="10.0946%" y="853" width="2.8391%" height="15" fill="rgb(220,193,23)" fg:x="32" fg:w="9"/><text x="10.3446%" y="863.50">st..</text></g><g><title>std::panicking::try (9 samples, 2.84%)</title><rect x="10.0946%" y="837" width="2.8391%" height="15" fill="rgb(230,90,52)" fg:x="32" fg:w="9"/><text x="10.3446%" y="847.50">st..</text></g><g><title>std::panicking::try::do_call (9 samples, 2.84%)</title><rect x="10.0946%" y="821" width="2.8391%" height="15" fill="rgb(252,106,19)" fg:x="32" fg:w="9"/><text x="10.3446%" y="831.50">st..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (9 samples, 2.84%)</title><rect x="10.0946%" y="805" width="2.8391%" height="15" fill="rgb(206,74,20)" fg:x="32" fg:w="9"/><text x="10.3446%" y="815.50">co..</text></g><g><title>_RNCINvNtCs93HjBDhGDHo_3std2rt10lang_startuE0CsgEODShloEAT_5cargo (9 samples, 2.84%)</title><rect x="10.0946%" y="789" width="2.8391%" height="15" fill="rgb(230,138,44)" fg:x="32" fg:w="9"/><text x="10.3446%" y="799.50">_R..</text></g><g><title>_RINvNtNtCs93HjBDhGDHo_3std10sys_common9backtrace28___rust_begin_short_backtraceFEuuECsgEODShloEAT_5cargo (9 samples, 2.84%)</title><rect x="10.0946%" y="773" width="2.8391%" height="15" fill="rgb(235,182,43)" fg:x="32" fg:w="9"/><text x="10.3446%" y="783.50">_R..</text></g><g><title>_RNvCsgEODShloEAT_5cargo4main (9 samples, 2.84%)</title><rect x="10.0946%" y="757" width="2.8391%" height="15" fill="rgb(242,16,51)" fg:x="32" fg:w="9"/><text x="10.3446%" y="767.50">_R..</text></g><g><title>_RNvNtCsgEODShloEAT_5cargo3cli4main (9 samples, 2.84%)</title><rect x="10.0946%" y="741" width="2.8391%" height="15" fill="rgb(248,9,4)" fg:x="32" fg:w="9"/><text x="10.3446%" y="751.50">_R..</text></g><g><title>std::path::Path::file_name (1 samples, 0.32%)</title><rect x="12.6183%" y="725" width="0.3155%" height="15" fill="rgb(210,31,22)" fg:x="40" fg:w="1"/><text x="12.8683%" y="735.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.32%)</title><rect x="12.6183%" y="709" width="0.3155%" height="15" fill="rgb(239,54,39)" fg:x="40" fg:w="1"/><text x="12.8683%" y="719.50"></text></g><g><title>std::path::Components::len_before_body (1 samples, 0.32%)</title><rect x="12.6183%" y="693" width="0.3155%" height="15" fill="rgb(230,99,41)" fg:x="40" fg:w="1"/><text x="12.8683%" y="703.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.32%)</title><rect x="12.6183%" y="677" width="0.3155%" height="15" fill="rgb(253,106,12)" fg:x="40" fg:w="1"/><text x="12.8683%" y="687.50"></text></g><g><title>&lt;std::path::State as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.32%)</title><rect x="12.6183%" y="661" width="0.3155%" height="15" fill="rgb(213,46,41)" fg:x="40" fg:w="1"/><text x="12.8683%" y="671.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.32%)</title><rect x="12.9338%" y="965" width="0.3155%" height="15" fill="rgb(215,133,35)" fg:x="41" fg:w="1"/><text x="13.1838%" y="975.50"></text></g><g><title>__memmove_avx512_unaligned_erms (9 samples, 2.84%)</title><rect x="13.2492%" y="965" width="2.8391%" height="15" fill="rgb(213,28,5)" fg:x="42" fg:w="9"/><text x="13.4992%" y="975.50">__..</text></g><g><title>ossl_init_add_all_ciphers_ossl_ (1 samples, 0.32%)</title><rect x="16.0883%" y="949" width="0.3155%" height="15" fill="rgb(215,77,49)" fg:x="51" fg:w="1"/><text x="16.3383%" y="959.50"></text></g><g><title>openssl_add_all_ciphers_int (1 samples, 0.32%)</title><rect x="16.0883%" y="933" width="0.3155%" height="15" fill="rgb(248,100,22)" fg:x="51" fg:w="1"/><text x="16.3383%" y="943.50"></text></g><g><title>OBJ_NAME_add (1 samples, 0.32%)</title><rect x="16.0883%" y="917" width="0.3155%" height="15" fill="rgb(208,67,9)" fg:x="51" fg:w="1"/><text x="16.3383%" y="927.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.32%)</title><rect x="16.0883%" y="901" width="0.3155%" height="15" fill="rgb(219,133,21)" fg:x="51" fg:w="1"/><text x="16.3383%" y="911.50"></text></g><g><title>ERR_load_CMS_strings (1 samples, 0.32%)</title><rect x="16.4038%" y="917" width="0.3155%" height="15" fill="rgb(246,46,29)" fg:x="52" fg:w="1"/><text x="16.6538%" y="927.50"></text></g><g><title>ERR_load_strings_const (1 samples, 0.32%)</title><rect x="16.4038%" y="901" width="0.3155%" height="15" fill="rgb(246,185,52)" fg:x="52" fg:w="1"/><text x="16.6538%" y="911.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.32%)</title><rect x="16.4038%" y="885" width="0.3155%" height="15" fill="rgb(252,136,11)" fg:x="52" fg:w="1"/><text x="16.6538%" y="895.50"></text></g><g><title>ossl_init_load_crypto_strings_ossl_ (2 samples, 0.63%)</title><rect x="16.4038%" y="949" width="0.6309%" height="15" fill="rgb(219,138,53)" fg:x="52" fg:w="2"/><text x="16.6538%" y="959.50"></text></g><g><title>err_load_crypto_strings_int (2 samples, 0.63%)</title><rect x="16.4038%" y="933" width="0.6309%" height="15" fill="rgb(211,51,23)" fg:x="52" fg:w="2"/><text x="16.6538%" y="943.50"></text></g><g><title>ERR_load_DH_strings (1 samples, 0.32%)</title><rect x="16.7192%" y="917" width="0.3155%" height="15" fill="rgb(247,221,28)" fg:x="53" fg:w="1"/><text x="16.9692%" y="927.50"></text></g><g><title>ERR_load_strings_const (1 samples, 0.32%)</title><rect x="16.7192%" y="901" width="0.3155%" height="15" fill="rgb(251,222,45)" fg:x="53" fg:w="1"/><text x="16.9692%" y="911.50"></text></g><g><title>ERR_load_ERR_strings (1 samples, 0.32%)</title><rect x="16.7192%" y="885" width="0.3155%" height="15" fill="rgb(217,162,53)" fg:x="53" fg:w="1"/><text x="16.9692%" y="895.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.32%)</title><rect x="16.7192%" y="869" width="0.3155%" height="15" fill="rgb(229,93,14)" fg:x="53" fg:w="1"/><text x="16.9692%" y="879.50"></text></g><g><title>__pthread_once_slow (4 samples, 1.26%)</title><rect x="16.0883%" y="965" width="1.2618%" height="15" fill="rgb(209,67,49)" fg:x="51" fg:w="4"/><text x="16.3383%" y="975.50"></text></g><g><title>ossl_init_load_ssl_strings_ossl_ (1 samples, 0.32%)</title><rect x="17.0347%" y="949" width="0.3155%" height="15" fill="rgb(213,87,29)" fg:x="54" fg:w="1"/><text x="17.2847%" y="959.50"></text></g><g><title>ERR_load_SSL_strings (1 samples, 0.32%)</title><rect x="17.0347%" y="933" width="0.3155%" height="15" fill="rgb(205,151,52)" fg:x="54" fg:w="1"/><text x="17.2847%" y="943.50"></text></g><g><title>ERR_load_strings_const (1 samples, 0.32%)</title><rect x="17.0347%" y="917" width="0.3155%" height="15" fill="rgb(253,215,39)" fg:x="54" fg:w="1"/><text x="17.2847%" y="927.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.32%)</title><rect x="17.0347%" y="901" width="0.3155%" height="15" fill="rgb(221,220,41)" fg:x="54" fg:w="1"/><text x="17.2847%" y="911.50"></text></g><g><title>__strncmp_evex (1 samples, 0.32%)</title><rect x="17.3502%" y="965" width="0.3155%" height="15" fill="rgb(218,133,21)" fg:x="55" fg:w="1"/><text x="17.6002%" y="975.50"></text></g><g><title>_int_free_create_chunk (1 samples, 0.32%)</title><rect x="17.6656%" y="965" width="0.3155%" height="15" fill="rgb(221,193,43)" fg:x="56" fg:w="1"/><text x="17.9156%" y="975.50"></text></g><g><title>_int_malloc (3 samples, 0.95%)</title><rect x="17.9811%" y="965" width="0.9464%" height="15" fill="rgb(240,128,52)" fg:x="57" fg:w="3"/><text x="18.2311%" y="975.50"></text></g><g><title>_start (2 samples, 0.63%)</title><rect x="18.9274%" y="965" width="0.6309%" height="15" fill="rgb(253,114,12)" fg:x="60" fg:w="2"/><text x="19.1774%" y="975.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.63%)</title><rect x="18.9274%" y="949" width="0.6309%" height="15" fill="rgb(215,223,47)" fg:x="60" fg:w="2"/><text x="19.1774%" y="959.50"></text></g><g><title>dl_main (2 samples, 0.63%)</title><rect x="18.9274%" y="933" width="0.6309%" height="15" fill="rgb(248,225,23)" fg:x="60" fg:w="2"/><text x="19.1774%" y="943.50"></text></g><g><title>_dl_relocate_object (2 samples, 0.63%)</title><rect x="18.9274%" y="917" width="0.6309%" height="15" fill="rgb(250,108,0)" fg:x="60" fg:w="2"/><text x="19.1774%" y="927.50"></text></g><g><title>malloc (1 samples, 0.32%)</title><rect x="19.5584%" y="965" width="0.3155%" height="15" fill="rgb(228,208,7)" fg:x="62" fg:w="1"/><text x="19.8084%" y="975.50"></text></g><g><title>malloc_consolidate (1 samples, 0.32%)</title><rect x="19.8738%" y="965" width="0.3155%" height="15" fill="rgb(244,45,10)" fg:x="63" fg:w="1"/><text x="20.1238%" y="975.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.32%)</title><rect x="20.1893%" y="965" width="0.3155%" height="15" fill="rgb(207,125,25)" fg:x="64" fg:w="1"/><text x="20.4393%" y="975.50"></text></g><g><title>x509_object_cmp (1 samples, 0.32%)</title><rect x="20.1893%" y="949" width="0.3155%" height="15" fill="rgb(210,195,18)" fg:x="64" fg:w="1"/><text x="20.4393%" y="959.50"></text></g><g><title>cargo (66 samples, 20.82%)</title><rect x="0.0000%" y="981" width="20.8202%" height="15" fill="rgb(249,80,12)" fg:x="0" fg:w="66"/><text x="0.2500%" y="991.50">cargo</text></g><g><title>strcmp (1 samples, 0.32%)</title><rect x="20.5047%" y="965" width="0.3155%" height="15" fill="rgb(221,65,9)" fg:x="65" fg:w="1"/><text x="20.7547%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="20.8202%" y="965" width="0.6309%" height="15" fill="rgb(235,49,36)" fg:x="66" fg:w="2"/><text x="21.0702%" y="975.50"></text></g><g><title>__spawni_child (9 samples, 2.84%)</title><rect x="21.4511%" y="965" width="2.8391%" height="15" fill="rgb(225,32,20)" fg:x="68" fg:w="9"/><text x="21.7011%" y="975.50">__..</text></g><g><title>__GI___sigprocmask (2 samples, 0.63%)</title><rect x="23.6593%" y="949" width="0.6309%" height="15" fill="rgb(215,141,46)" fg:x="75" fg:w="2"/><text x="23.9093%" y="959.50"></text></g><g><title>pthread_sigmask@GLIBC_2.2.5 (2 samples, 0.63%)</title><rect x="23.6593%" y="933" width="0.6309%" height="15" fill="rgb(250,160,47)" fg:x="75" fg:w="2"/><text x="23.9093%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="24.6057%" y="949" width="0.3155%" height="15" fill="rgb(216,222,40)" fg:x="78" fg:w="1"/><text x="24.8557%" y="959.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (3 samples, 0.95%)</title><rect x="24.9211%" y="229" width="0.9464%" height="15" fill="rgb(234,217,39)" fg:x="79" fg:w="3"/><text x="25.1711%" y="239.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (1 samples, 0.32%)</title><rect x="25.8675%" y="229" width="0.3155%" height="15" fill="rgb(207,178,40)" fg:x="82" fg:w="1"/><text x="26.1175%" y="239.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.32%)</title><rect x="25.8675%" y="213" width="0.3155%" height="15" fill="rgb(221,136,13)" fg:x="82" fg:w="1"/><text x="26.1175%" y="223.50"></text></g><g><title>serde_json::de::from_slice (5 samples, 1.58%)</title><rect x="24.9211%" y="405" width="1.5773%" height="15" fill="rgb(249,199,10)" fg:x="79" fg:w="5"/><text x="25.1711%" y="415.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 1.58%)</title><rect x="24.9211%" y="389" width="1.5773%" height="15" fill="rgb(249,222,13)" fg:x="79" fg:w="5"/><text x="25.1711%" y="399.50"></text></g><g><title>criterion::cargo_target_directory::_::&lt;impl serde::de::Deserialize for criterion::cargo_target_directory::Metadata&gt;::deserialize (5 samples, 1.58%)</title><rect x="24.9211%" y="373" width="1.5773%" height="15" fill="rgb(244,185,38)" fg:x="79" fg:w="5"/><text x="25.1711%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (5 samples, 1.58%)</title><rect x="24.9211%" y="357" width="1.5773%" height="15" fill="rgb(236,202,9)" fg:x="79" fg:w="5"/><text x="25.1711%" y="367.50"></text></g><g><title>&lt;criterion::cargo_target_directory::_::&lt;impl serde::de::Deserialize for criterion::cargo_target_directory::Metadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (5 samples, 1.58%)</title><rect x="24.9211%" y="341" width="1.5773%" height="15" fill="rgb(250,229,37)" fg:x="79" fg:w="5"/><text x="25.1711%" y="351.50"></text></g><g><title>serde::de::MapAccess::next_value (5 samples, 1.58%)</title><rect x="24.9211%" y="325" width="1.5773%" height="15" fill="rgb(206,174,23)" fg:x="79" fg:w="5"/><text x="25.1711%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5 samples, 1.58%)</title><rect x="24.9211%" y="309" width="1.5773%" height="15" fill="rgb(211,33,43)" fg:x="79" fg:w="5"/><text x="25.1711%" y="319.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 1.58%)</title><rect x="24.9211%" y="293" width="1.5773%" height="15" fill="rgb(245,58,50)" fg:x="79" fg:w="5"/><text x="25.1711%" y="303.50"></text></g><g><title>&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (5 samples, 1.58%)</title><rect x="24.9211%" y="277" width="1.5773%" height="15" fill="rgb(244,68,36)" fg:x="79" fg:w="5"/><text x="25.1711%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (5 samples, 1.58%)</title><rect x="24.9211%" y="261" width="1.5773%" height="15" fill="rgb(232,229,15)" fg:x="79" fg:w="5"/><text x="25.1711%" y="271.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::ignore_value (5 samples, 1.58%)</title><rect x="24.9211%" y="245" width="1.5773%" height="15" fill="rgb(254,30,23)" fg:x="79" fg:w="5"/><text x="25.1711%" y="255.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.32%)</title><rect x="26.1830%" y="229" width="0.3155%" height="15" fill="rgb(235,160,14)" fg:x="83" fg:w="1"/><text x="26.4330%" y="239.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.32%)</title><rect x="26.1830%" y="213" width="0.3155%" height="15" fill="rgb(212,155,44)" fg:x="83" fg:w="1"/><text x="26.4330%" y="223.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.32%)</title><rect x="26.1830%" y="197" width="0.3155%" height="15" fill="rgb(226,2,50)" fg:x="83" fg:w="1"/><text x="26.4330%" y="207.50"></text></g><g><title>std::sys::pal::unix::cvt_r (2 samples, 0.63%)</title><rect x="26.8139%" y="341" width="0.6309%" height="15" fill="rgb(234,177,6)" fg:x="85" fg:w="2"/><text x="27.0639%" y="351.50"></text></g><g><title>std::sys::pal::unix::cvt (2 samples, 0.63%)</title><rect x="26.8139%" y="325" width="0.6309%" height="15" fill="rgb(217,24,9)" fg:x="85" fg:w="2"/><text x="27.0639%" y="335.50"></text></g><g><title>&lt;i32 as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.32%)</title><rect x="27.1293%" y="309" width="0.3155%" height="15" fill="rgb(220,13,46)" fg:x="86" fg:w="1"/><text x="27.3793%" y="319.50"></text></g><g><title>&lt;criterion::Criterion as core::default::Default&gt;::default (12 samples, 3.79%)</title><rect x="24.9211%" y="677" width="3.7855%" height="15" fill="rgb(239,221,27)" fg:x="79" fg:w="12"/><text x="25.1711%" y="687.50">&lt;cri..</text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 3.79%)</title><rect x="24.9211%" y="661" width="3.7855%" height="15" fill="rgb(222,198,25)" fg:x="79" fg:w="12"/><text x="25.1711%" y="671.50">&lt;onc..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (12 samples, 3.79%)</title><rect x="24.9211%" y="645" width="3.7855%" height="15" fill="rgb(211,99,13)" fg:x="79" fg:w="12"/><text x="25.1711%" y="655.50">once..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (12 samples, 3.79%)</title><rect x="24.9211%" y="629" width="3.7855%" height="15" fill="rgb(232,111,31)" fg:x="79" fg:w="12"/><text x="25.1711%" y="639.50">once..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (12 samples, 3.79%)</title><rect x="24.9211%" y="613" width="3.7855%" height="15" fill="rgb(245,82,37)" fg:x="79" fg:w="12"/><text x="25.1711%" y="623.50">once..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (12 samples, 3.79%)</title><rect x="24.9211%" y="597" width="3.7855%" height="15" fill="rgb(227,149,46)" fg:x="79" fg:w="12"/><text x="25.1711%" y="607.50">once..</text></g><g><title>once_cell::imp::initialize_or_wait (12 samples, 3.79%)</title><rect x="24.9211%" y="581" width="3.7855%" height="15" fill="rgb(218,36,50)" fg:x="79" fg:w="12"/><text x="25.1711%" y="591.50">once..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 3.79%)</title><rect x="24.9211%" y="565" width="3.7855%" height="15" fill="rgb(226,80,48)" fg:x="79" fg:w="12"/><text x="25.1711%" y="575.50">core..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (12 samples, 3.79%)</title><rect x="24.9211%" y="549" width="3.7855%" height="15" fill="rgb(238,224,15)" fg:x="79" fg:w="12"/><text x="25.1711%" y="559.50">once..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (12 samples, 3.79%)</title><rect x="24.9211%" y="533" width="3.7855%" height="15" fill="rgb(241,136,10)" fg:x="79" fg:w="12"/><text x="25.1711%" y="543.50">once..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (12 samples, 3.79%)</title><rect x="24.9211%" y="517" width="3.7855%" height="15" fill="rgb(208,32,45)" fg:x="79" fg:w="12"/><text x="25.1711%" y="527.50">once..</text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 3.79%)</title><rect x="24.9211%" y="501" width="3.7855%" height="15" fill="rgb(207,135,9)" fg:x="79" fg:w="12"/><text x="25.1711%" y="511.50">core..</text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 3.79%)</title><rect x="24.9211%" y="485" width="3.7855%" height="15" fill="rgb(206,86,44)" fg:x="79" fg:w="12"/><text x="25.1711%" y="495.50">core..</text></g><g><title>criterion::DEFAULT_OUTPUT_DIRECTORY::_{{closure}} (12 samples, 3.79%)</title><rect x="24.9211%" y="469" width="3.7855%" height="15" fill="rgb(245,177,15)" fg:x="79" fg:w="12"/><text x="25.1711%" y="479.50">crit..</text></g><g><title>criterion::cargo_target_directory (12 samples, 3.79%)</title><rect x="24.9211%" y="453" width="3.7855%" height="15" fill="rgb(206,64,50)" fg:x="79" fg:w="12"/><text x="25.1711%" y="463.50">crit..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (12 samples, 3.79%)</title><rect x="24.9211%" y="437" width="3.7855%" height="15" fill="rgb(234,36,40)" fg:x="79" fg:w="12"/><text x="25.1711%" y="447.50">core..</text></g><g><title>criterion::cargo_target_directory::_{{closure}} (12 samples, 3.79%)</title><rect x="24.9211%" y="421" width="3.7855%" height="15" fill="rgb(213,64,8)" fg:x="79" fg:w="12"/><text x="25.1711%" y="431.50">crit..</text></g><g><title>std::process::Command::output (7 samples, 2.21%)</title><rect x="26.4984%" y="405" width="2.2082%" height="15" fill="rgb(210,75,36)" fg:x="84" fg:w="7"/><text x="26.7484%" y="415.50">s..</text></g><g><title>std::sys::pal::unix::process::process_inner::&lt;impl std::sys::pal::unix::process::process_common::Command&gt;::output (7 samples, 2.21%)</title><rect x="26.4984%" y="389" width="2.2082%" height="15" fill="rgb(229,88,21)" fg:x="84" fg:w="7"/><text x="26.7484%" y="399.50">s..</text></g><g><title>std::sys_common::process::wait_with_output (7 samples, 2.21%)</title><rect x="26.4984%" y="373" width="2.2082%" height="15" fill="rgb(252,204,47)" fg:x="84" fg:w="7"/><text x="26.7484%" y="383.50">s..</text></g><g><title>std::sys::pal::unix::pipe::read2 (7 samples, 2.21%)</title><rect x="26.4984%" y="357" width="2.2082%" height="15" fill="rgb(208,77,27)" fg:x="84" fg:w="7"/><text x="26.7484%" y="367.50">s..</text></g><g><title>std::sys::pal::unix::pipe::read2::read (4 samples, 1.26%)</title><rect x="27.4448%" y="341" width="1.2618%" height="15" fill="rgb(221,76,26)" fg:x="87" fg:w="4"/><text x="27.6948%" y="351.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_to_end (4 samples, 1.26%)</title><rect x="27.4448%" y="325" width="1.2618%" height="15" fill="rgb(225,139,18)" fg:x="87" fg:w="4"/><text x="27.6948%" y="335.50"></text></g><g><title>std::io::Read::read_to_end (1 samples, 0.32%)</title><rect x="28.3912%" y="309" width="0.3155%" height="15" fill="rgb(230,137,11)" fg:x="90" fg:w="1"/><text x="28.6412%" y="319.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.32%)</title><rect x="28.3912%" y="293" width="0.3155%" height="15" fill="rgb(212,28,1)" fg:x="90" fg:w="1"/><text x="28.6412%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="28.7066%" y="197" width="0.3155%" height="15" fill="rgb(248,164,17)" fg:x="91" fg:w="1"/><text x="28.9566%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.32%)</title><rect x="28.7066%" y="181" width="0.3155%" height="15" fill="rgb(222,171,42)" fg:x="91" fg:w="1"/><text x="28.9566%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.32%)</title><rect x="28.7066%" y="165" width="0.3155%" height="15" fill="rgb(243,84,45)" fg:x="91" fg:w="1"/><text x="28.9566%" y="175.50"></text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin_internal::_{{closure}} (1 samples, 0.32%)</title><rect x="28.7066%" y="149" width="0.3155%" height="15" fill="rgb(252,49,23)" fg:x="91" fg:w="1"/><text x="28.9566%" y="159.50"></text></g><g><title>lfest::types::limit_order::LimitOrder&lt;Q,UserOrderId,OrderStatus&gt;::limit_price (1 samples, 0.32%)</title><rect x="28.7066%" y="133" width="0.3155%" height="15" fill="rgb(215,19,7)" fg:x="91" fg:w="1"/><text x="28.9566%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.32%)</title><rect x="29.0221%" y="197" width="0.3155%" height="15" fill="rgb(238,81,41)" fg:x="92" fg:w="1"/><text x="29.2721%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.32%)</title><rect x="29.0221%" y="181" width="0.3155%" height="15" fill="rgb(210,199,37)" fg:x="92" fg:w="1"/><text x="29.2721%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.32%)</title><rect x="29.0221%" y="165" width="0.3155%" height="15" fill="rgb(244,192,49)" fg:x="92" fg:w="1"/><text x="29.2721%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.32%)</title><rect x="29.0221%" y="149" width="0.3155%" height="15" fill="rgb(226,211,11)" fg:x="92" fg:w="1"/><text x="29.2721%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.32%)</title><rect x="29.0221%" y="133" width="0.3155%" height="15" fill="rgb(236,162,54)" fg:x="92" fg:w="1"/><text x="29.2721%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.32%)</title><rect x="29.0221%" y="117" width="0.3155%" height="15" fill="rgb(220,229,9)" fg:x="92" fg:w="1"/><text x="29.2721%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.32%)</title><rect x="29.0221%" y="101" width="0.3155%" height="15" fill="rgb(250,87,22)" fg:x="92" fg:w="1"/><text x="29.2721%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.32%)</title><rect x="29.0221%" y="85" width="0.3155%" height="15" fill="rgb(239,43,17)" fg:x="92" fg:w="1"/><text x="29.2721%" y="95.50"></text></g><g><title>realloc (1 samples, 0.32%)</title><rect x="29.0221%" y="69" width="0.3155%" height="15" fill="rgb(231,177,25)" fg:x="92" fg:w="1"/><text x="29.2721%" y="79.50"></text></g><g><title>_int_realloc (1 samples, 0.32%)</title><rect x="29.0221%" y="53" width="0.3155%" height="15" fill="rgb(219,179,1)" fg:x="92" fg:w="1"/><text x="29.2721%" y="63.50"></text></g><g><title>_int_malloc (1 samples, 0.32%)</title><rect x="29.0221%" y="37" width="0.3155%" height="15" fill="rgb(238,219,53)" fg:x="92" fg:w="1"/><text x="29.2721%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 1.58%)</title><rect x="28.7066%" y="277" width="1.5773%" height="15" fill="rgb(232,167,36)" fg:x="91" fg:w="5"/><text x="28.9566%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 1.58%)</title><rect x="28.7066%" y="261" width="1.5773%" height="15" fill="rgb(244,19,51)" fg:x="91" fg:w="5"/><text x="28.9566%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 1.58%)</title><rect x="28.7066%" y="245" width="1.5773%" height="15" fill="rgb(224,6,22)" fg:x="91" fg:w="5"/><text x="28.9566%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 1.58%)</title><rect x="28.7066%" y="229" width="1.5773%" height="15" fill="rgb(224,145,5)" fg:x="91" fg:w="5"/><text x="28.9566%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 1.58%)</title><rect x="28.7066%" y="213" width="1.5773%" height="15" fill="rgb(234,130,49)" fg:x="91" fg:w="5"/><text x="28.9566%" y="223.50"></text></g><g><title>core::ptr::write (3 samples, 0.95%)</title><rect x="29.3375%" y="197" width="0.9464%" height="15" fill="rgb(254,6,2)" fg:x="93" fg:w="3"/><text x="29.5875%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (1 samples, 0.32%)</title><rect x="30.9148%" y="197" width="0.3155%" height="15" fill="rgb(208,96,46)" fg:x="98" fg:w="1"/><text x="31.1648%" y="207.50"></text></g><g><title>fpdec::binops::div_rounded::checked_div_rounded (7 samples, 2.21%)</title><rect x="30.2839%" y="213" width="2.2082%" height="15" fill="rgb(239,3,39)" fg:x="96" fg:w="7"/><text x="30.5339%" y="223.50">f..</text></g><g><title>fpdec_core::rounding::i128_div_rounded (4 samples, 1.26%)</title><rect x="31.2303%" y="197" width="1.2618%" height="15" fill="rgb(233,210,1)" fg:x="99" fg:w="4"/><text x="31.4803%" y="207.50"></text></g><g><title>fpdec_core::i128_div_mod_floor (3 samples, 0.95%)</title><rect x="31.5457%" y="181" width="0.9464%" height="15" fill="rgb(244,137,37)" fg:x="100" fg:w="3"/><text x="31.7957%" y="191.50"></text></g><g><title>__divti3 (3 samples, 0.95%)</title><rect x="31.5457%" y="165" width="0.9464%" height="15" fill="rgb(240,136,2)" fg:x="100" fg:w="3"/><text x="31.7957%" y="175.50"></text></g><g><title>compiler_builtins::int::sdiv::__divti3 (3 samples, 0.95%)</title><rect x="31.5457%" y="149" width="0.9464%" height="15" fill="rgb(239,18,37)" fg:x="100" fg:w="3"/><text x="31.7957%" y="159.50"></text></g><g><title>compiler_builtins::int::udiv::__udivti3 (2 samples, 0.63%)</title><rect x="31.8612%" y="133" width="0.6309%" height="15" fill="rgb(218,185,22)" fg:x="101" fg:w="2"/><text x="32.1112%" y="143.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (1 samples, 0.32%)</title><rect x="32.1767%" y="117" width="0.3155%" height="15" fill="rgb(225,218,4)" fg:x="102" fg:w="1"/><text x="32.4267%" y="127.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (66 samples, 20.82%)</title><rect x="30.2839%" y="277" width="20.8202%" height="15" fill="rgb(230,182,32)" fg:x="96" fg:w="66"/><text x="30.5339%" y="287.50">&lt;core::slice::iter::Iter&lt;T&gt; as co..</text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin_internal::_{{closure}} (66 samples, 20.82%)</title><rect x="30.2839%" y="261" width="20.8202%" height="15" fill="rgb(242,56,43)" fg:x="96" fg:w="66"/><text x="30.5339%" y="271.50">lfest::order_margin::OrderMargin&lt;..</text></g><g><title>&lt;lfest::types::currency::quote_currency::QuoteCurrency as lfest::types::currency::currency_trait::Currency&gt;::convert (66 samples, 20.82%)</title><rect x="30.2839%" y="245" width="20.8202%" height="15" fill="rgb(233,99,24)" fg:x="96" fg:w="66"/><text x="30.5339%" y="255.50">&lt;lfest::types::currency::quote_cu..</text></g><g><title>fpdec::binops::div::&lt;impl core::ops::arith::Div for fpdec::Decimal&gt;::div (66 samples, 20.82%)</title><rect x="30.2839%" y="229" width="20.8202%" height="15" fill="rgb(234,209,42)" fg:x="96" fg:w="66"/><text x="30.5339%" y="239.50">fpdec::binops::div::&lt;impl core::o..</text></g><g><title>fpdec::normalize (59 samples, 18.61%)</title><rect x="32.4921%" y="213" width="18.6120%" height="15" fill="rgb(227,7,12)" fg:x="103" fg:w="59"/><text x="32.7421%" y="223.50">fpdec::normalize</text></g><g><title>__divti3 (28 samples, 8.83%)</title><rect x="42.2713%" y="197" width="8.8328%" height="15" fill="rgb(245,203,43)" fg:x="134" fg:w="28"/><text x="42.5213%" y="207.50">__divti3</text></g><g><title>compiler_builtins::int::sdiv::__divti3 (23 samples, 7.26%)</title><rect x="43.8486%" y="181" width="7.2555%" height="15" fill="rgb(238,205,33)" fg:x="139" fg:w="23"/><text x="44.0986%" y="191.50">compiler_b..</text></g><g><title>compiler_builtins::int::udiv::__udivti3 (11 samples, 3.47%)</title><rect x="47.6341%" y="165" width="3.4700%" height="15" fill="rgb(231,56,7)" fg:x="151" fg:w="11"/><text x="47.8841%" y="175.50">com..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (7 samples, 2.21%)</title><rect x="48.8959%" y="149" width="2.2082%" height="15" fill="rgb(244,186,29)" fg:x="155" fg:w="7"/><text x="49.1459%" y="159.50">c..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_by_u64_div_rem (3 samples, 0.95%)</title><rect x="50.1577%" y="133" width="0.9464%" height="15" fill="rgb(234,111,31)" fg:x="159" fg:w="3"/><text x="50.4077%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i128&gt;::partial_cmp (1 samples, 0.32%)</title><rect x="52.0505%" y="149" width="0.3155%" height="15" fill="rgb(241,149,10)" fg:x="165" fg:w="1"/><text x="52.3005%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i128&gt;::cmp (1 samples, 0.32%)</title><rect x="52.0505%" y="133" width="0.3155%" height="15" fill="rgb(249,206,44)" fg:x="165" fg:w="1"/><text x="52.3005%" y="143.50"></text></g><g><title>core::slice::sort::find_streak (5 samples, 1.58%)</title><rect x="51.1041%" y="229" width="1.5773%" height="15" fill="rgb(251,153,30)" fg:x="162" fg:w="5"/><text x="51.3541%" y="239.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by_key::_{{closure}} (5 samples, 1.58%)</title><rect x="51.1041%" y="213" width="1.5773%" height="15" fill="rgb(239,152,38)" fg:x="162" fg:w="5"/><text x="51.3541%" y="223.50"></text></g><g><title>core::cmp::PartialOrd::lt (5 samples, 1.58%)</title><rect x="51.1041%" y="197" width="1.5773%" height="15" fill="rgb(249,139,47)" fg:x="162" fg:w="5"/><text x="51.3541%" y="207.50"></text></g><g><title>&lt;lfest::types::currency::quote_currency::QuoteCurrency as core::cmp::PartialOrd&gt;::partial_cmp (5 samples, 1.58%)</title><rect x="51.1041%" y="181" width="1.5773%" height="15" fill="rgb(244,64,35)" fg:x="162" fg:w="5"/><text x="51.3541%" y="191.50"></text></g><g><title>fpdec::binops::cmp::&lt;impl core::cmp::PartialOrd for fpdec::Decimal&gt;::partial_cmp (5 samples, 1.58%)</title><rect x="51.1041%" y="165" width="1.5773%" height="15" fill="rgb(216,46,15)" fg:x="162" fg:w="5"/><text x="51.3541%" y="175.50"></text></g><g><title>fpdec_core::checked_adjust_coeffs (1 samples, 0.32%)</title><rect x="52.3659%" y="149" width="0.3155%" height="15" fill="rgb(250,74,19)" fg:x="166" fg:w="1"/><text x="52.6159%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (1 samples, 0.32%)</title><rect x="52.3659%" y="133" width="0.3155%" height="15" fill="rgb(249,42,33)" fg:x="166" fg:w="1"/><text x="52.6159%" y="143.50"></text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin (77 samples, 24.29%)</title><rect x="28.7066%" y="309" width="24.2902%" height="15" fill="rgb(242,149,17)" fg:x="91" fg:w="77"/><text x="28.9566%" y="319.50">lfest::order_margin::OrderMargin&lt;Q,User..</text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin_internal (77 samples, 24.29%)</title><rect x="28.7066%" y="293" width="24.2902%" height="15" fill="rgb(244,29,21)" fg:x="91" fg:w="77"/><text x="28.9566%" y="303.50">lfest::order_margin::OrderMargin&lt;Q,User..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (6 samples, 1.89%)</title><rect x="51.1041%" y="277" width="1.8927%" height="15" fill="rgb(220,130,37)" fg:x="162" fg:w="6"/><text x="51.3541%" y="287.50">a..</text></g><g><title>alloc::slice::stable_sort (6 samples, 1.89%)</title><rect x="51.1041%" y="261" width="1.8927%" height="15" fill="rgb(211,67,2)" fg:x="162" fg:w="6"/><text x="51.3541%" y="271.50">a..</text></g><g><title>core::slice::sort::merge_sort (6 samples, 1.89%)</title><rect x="51.1041%" y="245" width="1.8927%" height="15" fill="rgb(235,68,52)" fg:x="162" fg:w="6"/><text x="51.3541%" y="255.50">c..</text></g><g><title>core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt;::new (1 samples, 0.32%)</title><rect x="52.6814%" y="229" width="0.3155%" height="15" fill="rgb(246,142,3)" fg:x="167" fg:w="1"/><text x="52.9314%" y="239.50"></text></g><g><title>alloc::slice::stable_sort::_{{closure}} (1 samples, 0.32%)</title><rect x="52.6814%" y="213" width="0.3155%" height="15" fill="rgb(241,25,7)" fg:x="167" fg:w="1"/><text x="52.9314%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.32%)</title><rect x="52.6814%" y="197" width="0.3155%" height="15" fill="rgb(242,119,39)" fg:x="167" fg:w="1"/><text x="52.9314%" y="207.50"></text></g><g><title>malloc (1 samples, 0.32%)</title><rect x="52.6814%" y="181" width="0.3155%" height="15" fill="rgb(241,98,45)" fg:x="167" fg:w="1"/><text x="52.9314%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.32%)</title><rect x="52.9968%" y="229" width="0.3155%" height="15" fill="rgb(254,28,30)" fg:x="168" fg:w="1"/><text x="53.2468%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.32%)</title><rect x="52.9968%" y="213" width="0.3155%" height="15" fill="rgb(241,142,54)" fg:x="168" fg:w="1"/><text x="53.2468%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="52.9968%" y="197" width="0.3155%" height="15" fill="rgb(222,85,15)" fg:x="168" fg:w="1"/><text x="53.2468%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="52.9968%" y="181" width="0.3155%" height="15" fill="rgb(210,85,47)" fg:x="168" fg:w="1"/><text x="53.2468%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.32%)</title><rect x="52.9968%" y="165" width="0.3155%" height="15" fill="rgb(224,206,25)" fg:x="168" fg:w="1"/><text x="53.2468%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.32%)</title><rect x="52.9968%" y="149" width="0.3155%" height="15" fill="rgb(243,201,19)" fg:x="168" fg:w="1"/><text x="53.2468%" y="159.50"></text></g><g><title>&lt;hashbrown::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="52.9968%" y="133" width="0.3155%" height="15" fill="rgb(236,59,4)" fg:x="168" fg:w="1"/><text x="53.2468%" y="143.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="52.9968%" y="117" width="0.3155%" height="15" fill="rgb(254,179,45)" fg:x="168" fg:w="1"/><text x="53.2468%" y="127.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="52.9968%" y="101" width="0.3155%" height="15" fill="rgb(226,14,10)" fg:x="168" fg:w="1"/><text x="53.2468%" y="111.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.32%)</title><rect x="52.9968%" y="85" width="0.3155%" height="15" fill="rgb(244,27,41)" fg:x="168" fg:w="1"/><text x="53.2468%" y="95.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="52.9968%" y="69" width="0.3155%" height="15" fill="rgb(235,35,32)" fg:x="168" fg:w="1"/><text x="53.2468%" y="79.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.32%)</title><rect x="52.9968%" y="53" width="0.3155%" height="15" fill="rgb(218,68,31)" fg:x="168" fg:w="1"/><text x="53.2468%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.63%)</title><rect x="52.9968%" y="277" width="0.6309%" height="15" fill="rgb(207,120,37)" fg:x="168" fg:w="2"/><text x="53.2468%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.63%)</title><rect x="52.9968%" y="261" width="0.6309%" height="15" fill="rgb(227,98,0)" fg:x="168" fg:w="2"/><text x="53.2468%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.63%)</title><rect x="52.9968%" y="245" width="0.6309%" height="15" fill="rgb(207,7,3)" fg:x="168" fg:w="2"/><text x="53.2468%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="53.3123%" y="229" width="0.3155%" height="15" fill="rgb(206,98,19)" fg:x="169" fg:w="1"/><text x="53.5623%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="53.3123%" y="213" width="0.3155%" height="15" fill="rgb(217,5,26)" fg:x="169" fg:w="1"/><text x="53.5623%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.32%)</title><rect x="53.3123%" y="197" width="0.3155%" height="15" fill="rgb(235,190,38)" fg:x="169" fg:w="1"/><text x="53.5623%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.32%)</title><rect x="53.3123%" y="181" width="0.3155%" height="15" fill="rgb(247,86,24)" fg:x="169" fg:w="1"/><text x="53.5623%" y="191.50"></text></g><g><title>fpdec::binops::cmp::&lt;impl fpdec::Decimal&gt;::eq_one (1 samples, 0.32%)</title><rect x="54.2587%" y="213" width="0.3155%" height="15" fill="rgb(205,101,16)" fg:x="172" fg:w="1"/><text x="54.5087%" y="223.50"></text></g><g><title>fpdec_core::i128_div_mod_floor (5 samples, 1.58%)</title><rect x="54.5741%" y="181" width="1.5773%" height="15" fill="rgb(246,168,33)" fg:x="173" fg:w="5"/><text x="54.8241%" y="191.50"></text></g><g><title>__divti3 (3 samples, 0.95%)</title><rect x="55.2050%" y="165" width="0.9464%" height="15" fill="rgb(231,114,1)" fg:x="175" fg:w="3"/><text x="55.4550%" y="175.50"></text></g><g><title>compiler_builtins::int::sdiv::__divti3 (3 samples, 0.95%)</title><rect x="55.2050%" y="149" width="0.9464%" height="15" fill="rgb(207,184,53)" fg:x="175" fg:w="3"/><text x="55.4550%" y="159.50"></text></g><g><title>compiler_builtins::int::udiv::__udivti3 (2 samples, 0.63%)</title><rect x="55.5205%" y="133" width="0.6309%" height="15" fill="rgb(224,95,51)" fg:x="176" fg:w="2"/><text x="55.7705%" y="143.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (1 samples, 0.32%)</title><rect x="55.8360%" y="117" width="0.3155%" height="15" fill="rgb(212,188,45)" fg:x="177" fg:w="1"/><text x="56.0860%" y="127.50"></text></g><g><title>fpdec::binops::div_rounded::checked_div_rounded (6 samples, 1.89%)</title><rect x="54.5741%" y="213" width="1.8927%" height="15" fill="rgb(223,154,38)" fg:x="173" fg:w="6"/><text x="54.8241%" y="223.50">f..</text></g><g><title>fpdec_core::rounding::i128_div_rounded (6 samples, 1.89%)</title><rect x="54.5741%" y="197" width="1.8927%" height="15" fill="rgb(251,22,52)" fg:x="173" fg:w="6"/><text x="54.8241%" y="207.50">f..</text></g><g><title>fpdec_core::rounding::round_quot (1 samples, 0.32%)</title><rect x="56.1514%" y="181" width="0.3155%" height="15" fill="rgb(229,209,22)" fg:x="178" fg:w="1"/><text x="56.4014%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (54 samples, 17.03%)</title><rect x="53.6278%" y="277" width="17.0347%" height="15" fill="rgb(234,138,34)" fg:x="170" fg:w="54"/><text x="53.8778%" y="287.50">&lt;core::slice::iter::Iter&lt;T..</text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin_internal::_{{closure}} (54 samples, 17.03%)</title><rect x="53.6278%" y="261" width="17.0347%" height="15" fill="rgb(212,95,11)" fg:x="170" fg:w="54"/><text x="53.8778%" y="271.50">lfest::order_margin::Order..</text></g><g><title>&lt;lfest::types::currency::quote_currency::QuoteCurrency as lfest::types::currency::currency_trait::Currency&gt;::convert (54 samples, 17.03%)</title><rect x="53.6278%" y="245" width="17.0347%" height="15" fill="rgb(240,179,47)" fg:x="170" fg:w="54"/><text x="53.8778%" y="255.50">&lt;lfest::types::currency::q..</text></g><g><title>fpdec::binops::div::&lt;impl core::ops::arith::Div for fpdec::Decimal&gt;::div (54 samples, 17.03%)</title><rect x="53.6278%" y="229" width="17.0347%" height="15" fill="rgb(240,163,11)" fg:x="170" fg:w="54"/><text x="53.8778%" y="239.50">fpdec::binops::div::&lt;impl ..</text></g><g><title>fpdec::normalize (45 samples, 14.20%)</title><rect x="56.4669%" y="213" width="14.1956%" height="15" fill="rgb(236,37,12)" fg:x="179" fg:w="45"/><text x="56.7169%" y="223.50">fpdec::normalize</text></g><g><title>__divti3 (23 samples, 7.26%)</title><rect x="63.4069%" y="197" width="7.2555%" height="15" fill="rgb(232,164,16)" fg:x="201" fg:w="23"/><text x="63.6569%" y="207.50">__divti3</text></g><g><title>compiler_builtins::int::sdiv::__divti3 (20 samples, 6.31%)</title><rect x="64.3533%" y="181" width="6.3091%" height="15" fill="rgb(244,205,15)" fg:x="204" fg:w="20"/><text x="64.6033%" y="191.50">compiler..</text></g><g><title>compiler_builtins::int::udiv::__udivti3 (13 samples, 4.10%)</title><rect x="66.5615%" y="165" width="4.1009%" height="15" fill="rgb(223,117,47)" fg:x="211" fg:w="13"/><text x="66.8115%" y="175.50">comp..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (13 samples, 4.10%)</title><rect x="66.5615%" y="149" width="4.1009%" height="15" fill="rgb(244,107,35)" fg:x="211" fg:w="13"/><text x="66.8115%" y="159.50">comp..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_by_u64_div_rem (4 samples, 1.26%)</title><rect x="69.4006%" y="133" width="1.2618%" height="15" fill="rgb(205,140,8)" fg:x="220" fg:w="4"/><text x="69.6506%" y="143.50"></text></g><g><title>&lt;lfest::risk_engine::isolated_margin::IsolatedMarginRiskEngine&lt;M&gt; as lfest::risk_engine::risk_engine_trait::RiskEngine&lt;M,UserOrderId&gt;&gt;::check_limit_order (135 samples, 42.59%)</title><rect x="28.7066%" y="325" width="42.5868%" height="15" fill="rgb(228,84,46)" fg:x="91" fg:w="135"/><text x="28.9566%" y="335.50">&lt;lfest::risk_engine::isolated_margin::IsolatedMarginRiskEngine&lt;M&gt; as l..</text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin_with_order (58 samples, 18.30%)</title><rect x="52.9968%" y="309" width="18.2965%" height="15" fill="rgb(254,188,9)" fg:x="168" fg:w="58"/><text x="53.2468%" y="319.50">lfest::order_margin::OrderMar..</text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin_internal (58 samples, 18.30%)</title><rect x="52.9968%" y="293" width="18.2965%" height="15" fill="rgb(206,112,54)" fg:x="168" fg:w="58"/><text x="53.2468%" y="303.50">lfest::order_margin::OrderMar..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (2 samples, 0.63%)</title><rect x="70.6625%" y="277" width="0.6309%" height="15" fill="rgb(216,84,49)" fg:x="224" fg:w="2"/><text x="70.9125%" y="287.50"></text></g><g><title>alloc::slice::stable_sort (2 samples, 0.63%)</title><rect x="70.6625%" y="261" width="0.6309%" height="15" fill="rgb(214,194,35)" fg:x="224" fg:w="2"/><text x="70.9125%" y="271.50"></text></g><g><title>core::slice::sort::merge_sort (2 samples, 0.63%)</title><rect x="70.6625%" y="245" width="0.6309%" height="15" fill="rgb(249,28,3)" fg:x="224" fg:w="2"/><text x="70.9125%" y="255.50"></text></g><g><title>core::slice::sort::find_streak (2 samples, 0.63%)</title><rect x="70.6625%" y="229" width="0.6309%" height="15" fill="rgb(222,56,52)" fg:x="224" fg:w="2"/><text x="70.9125%" y="239.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by_key::_{{closure}} (2 samples, 0.63%)</title><rect x="70.6625%" y="213" width="0.6309%" height="15" fill="rgb(245,217,50)" fg:x="224" fg:w="2"/><text x="70.9125%" y="223.50"></text></g><g><title>core::cmp::PartialOrd::lt (1 samples, 0.32%)</title><rect x="70.9779%" y="197" width="0.3155%" height="15" fill="rgb(213,201,24)" fg:x="225" fg:w="1"/><text x="71.2279%" y="207.50"></text></g><g><title>&lt;lfest::types::currency::quote_currency::QuoteCurrency as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.32%)</title><rect x="70.9779%" y="181" width="0.3155%" height="15" fill="rgb(248,116,28)" fg:x="225" fg:w="1"/><text x="71.2279%" y="191.50"></text></g><g><title>fpdec::binops::cmp::&lt;impl core::cmp::PartialOrd for fpdec::Decimal&gt;::partial_cmp (1 samples, 0.32%)</title><rect x="70.9779%" y="165" width="0.3155%" height="15" fill="rgb(219,72,43)" fg:x="225" fg:w="1"/><text x="71.2279%" y="175.50"></text></g><g><title>fpdec_core::checked_adjust_coeffs (1 samples, 0.32%)</title><rect x="70.9779%" y="149" width="0.3155%" height="15" fill="rgb(209,138,14)" fg:x="225" fg:w="1"/><text x="71.2279%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (4 samples, 1.26%)</title><rect x="71.2934%" y="213" width="1.2618%" height="15" fill="rgb(222,18,33)" fg:x="226" fg:w="4"/><text x="71.5434%" y="223.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}}::_{{closure}} (4 samples, 1.26%)</title><rect x="71.2934%" y="197" width="1.2618%" height="15" fill="rgb(213,199,7)" fg:x="226" fg:w="4"/><text x="71.5434%" y="207.50"></text></g><g><title>&lt;lfest::types::limit_order::LimitOrder&lt;Q,UserOrderId,OrderStatus&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 1.26%)</title><rect x="71.2934%" y="181" width="1.2618%" height="15" fill="rgb(250,110,10)" fg:x="226" fg:w="4"/><text x="71.5434%" y="191.50"></text></g><g><title>&lt;lfest::types::currency::quote_currency::QuoteCurrency as core::cmp::PartialEq&gt;::eq (4 samples, 1.26%)</title><rect x="71.2934%" y="165" width="1.2618%" height="15" fill="rgb(248,123,6)" fg:x="226" fg:w="4"/><text x="71.5434%" y="175.50"></text></g><g><title>fpdec::binops::cmp::&lt;impl core::cmp::PartialEq for fpdec::Decimal&gt;::eq (4 samples, 1.26%)</title><rect x="71.2934%" y="149" width="1.2618%" height="15" fill="rgb(206,91,31)" fg:x="226" fg:w="4"/><text x="71.5434%" y="159.50"></text></g><g><title>fpdec_core::checked_adjust_coeffs (1 samples, 0.32%)</title><rect x="72.2397%" y="133" width="0.3155%" height="15" fill="rgb(211,154,13)" fg:x="229" fg:w="1"/><text x="72.4897%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (1 samples, 0.32%)</title><rect x="72.2397%" y="117" width="0.3155%" height="15" fill="rgb(225,148,7)" fg:x="229" fg:w="1"/><text x="72.4897%" y="127.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.63%)</title><rect x="72.5552%" y="165" width="0.6309%" height="15" fill="rgb(220,160,43)" fg:x="230" fg:w="2"/><text x="72.8052%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.63%)</title><rect x="72.5552%" y="149" width="0.6309%" height="15" fill="rgb(213,52,39)" fg:x="230" fg:w="2"/><text x="72.8052%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 2.52%)</title><rect x="71.2934%" y="309" width="2.5237%" height="15" fill="rgb(243,137,7)" fg:x="226" fg:w="8"/><text x="71.5434%" y="319.50">co..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 2.52%)</title><rect x="71.2934%" y="293" width="2.5237%" height="15" fill="rgb(230,79,13)" fg:x="226" fg:w="8"/><text x="71.5434%" y="303.50">&lt;h..</text></g><g><title>core::iter::traits::iterator::Iterator::all (8 samples, 2.52%)</title><rect x="71.2934%" y="277" width="2.5237%" height="15" fill="rgb(247,105,23)" fg:x="226" fg:w="8"/><text x="71.5434%" y="287.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 2.52%)</title><rect x="71.2934%" y="261" width="2.5237%" height="15" fill="rgb(223,179,41)" fg:x="226" fg:w="8"/><text x="71.5434%" y="271.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (8 samples, 2.52%)</title><rect x="71.2934%" y="245" width="2.5237%" height="15" fill="rgb(218,9,34)" fg:x="226" fg:w="8"/><text x="71.5434%" y="255.50">co..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (8 samples, 2.52%)</title><rect x="71.2934%" y="229" width="2.5237%" height="15" fill="rgb(222,106,8)" fg:x="226" fg:w="8"/><text x="71.5434%" y="239.50">&lt;h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 1.26%)</title><rect x="72.5552%" y="213" width="1.2618%" height="15" fill="rgb(211,220,0)" fg:x="230" fg:w="4"/><text x="72.8052%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 1.26%)</title><rect x="72.5552%" y="197" width="1.2618%" height="15" fill="rgb(229,52,16)" fg:x="230" fg:w="4"/><text x="72.8052%" y="207.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 1.26%)</title><rect x="72.5552%" y="181" width="1.2618%" height="15" fill="rgb(212,155,18)" fg:x="230" fg:w="4"/><text x="72.8052%" y="191.50"></text></g><g><title>&lt;lfest::types::order_id::OrderId as core::hash::Hash&gt;::hash (2 samples, 0.63%)</title><rect x="73.1861%" y="165" width="0.6309%" height="15" fill="rgb(242,21,14)" fg:x="232" fg:w="2"/><text x="73.4361%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2 samples, 0.63%)</title><rect x="73.1861%" y="149" width="0.6309%" height="15" fill="rgb(222,19,48)" fg:x="232" fg:w="2"/><text x="73.4361%" y="159.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (2 samples, 0.63%)</title><rect x="73.1861%" y="133" width="0.6309%" height="15" fill="rgb(232,45,27)" fg:x="232" fg:w="2"/><text x="73.4361%" y="143.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.63%)</title><rect x="73.1861%" y="117" width="0.6309%" height="15" fill="rgb(249,103,42)" fg:x="232" fg:w="2"/><text x="73.4361%" y="127.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.63%)</title><rect x="73.1861%" y="101" width="0.6309%" height="15" fill="rgb(246,81,33)" fg:x="232" fg:w="2"/><text x="73.4361%" y="111.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.32%)</title><rect x="73.5016%" y="85" width="0.3155%" height="15" fill="rgb(252,33,42)" fg:x="233" fg:w="1"/><text x="73.7516%" y="95.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="74.1325%" y="197" width="0.3155%" height="15" fill="rgb(209,212,41)" fg:x="235" fg:w="1"/><text x="74.3825%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.32%)</title><rect x="74.1325%" y="181" width="0.3155%" height="15" fill="rgb(207,154,6)" fg:x="235" fg:w="1"/><text x="74.3825%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.32%)</title><rect x="74.1325%" y="165" width="0.3155%" height="15" fill="rgb(223,64,47)" fg:x="235" fg:w="1"/><text x="74.3825%" y="175.50"></text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin_internal::_{{closure}} (1 samples, 0.32%)</title><rect x="74.1325%" y="149" width="0.3155%" height="15" fill="rgb(211,161,38)" fg:x="235" fg:w="1"/><text x="74.3825%" y="159.50"></text></g><g><title>lfest::types::limit_order::LimitOrder&lt;Q,UserOrderId,OrderStatus&gt;::remaining_quantity (1 samples, 0.32%)</title><rect x="74.1325%" y="133" width="0.3155%" height="15" fill="rgb(219,138,40)" fg:x="235" fg:w="1"/><text x="74.3825%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 1.26%)</title><rect x="73.8170%" y="229" width="1.2618%" height="15" fill="rgb(241,228,46)" fg:x="234" fg:w="4"/><text x="74.0670%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 1.26%)</title><rect x="73.8170%" y="213" width="1.2618%" height="15" fill="rgb(223,209,38)" fg:x="234" fg:w="4"/><text x="74.0670%" y="223.50"></text></g><g><title>core::ptr::write (2 samples, 0.63%)</title><rect x="74.4479%" y="197" width="0.6309%" height="15" fill="rgb(236,164,45)" fg:x="236" fg:w="2"/><text x="74.6979%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 1.58%)</title><rect x="73.8170%" y="277" width="1.5773%" height="15" fill="rgb(231,15,5)" fg:x="234" fg:w="5"/><text x="74.0670%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 1.58%)</title><rect x="73.8170%" y="261" width="1.5773%" height="15" fill="rgb(252,35,15)" fg:x="234" fg:w="5"/><text x="74.0670%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 1.58%)</title><rect x="73.8170%" y="245" width="1.5773%" height="15" fill="rgb(248,181,18)" fg:x="234" fg:w="5"/><text x="74.0670%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="75.0789%" y="229" width="0.3155%" height="15" fill="rgb(233,39,42)" fg:x="238" fg:w="1"/><text x="75.3289%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.32%)</title><rect x="75.0789%" y="213" width="0.3155%" height="15" fill="rgb(238,110,33)" fg:x="238" fg:w="1"/><text x="75.3289%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.32%)</title><rect x="75.0789%" y="197" width="0.3155%" height="15" fill="rgb(233,195,10)" fg:x="238" fg:w="1"/><text x="75.3289%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.32%)</title><rect x="75.0789%" y="181" width="0.3155%" height="15" fill="rgb(254,105,3)" fg:x="238" fg:w="1"/><text x="75.3289%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.32%)</title><rect x="75.0789%" y="165" width="0.3155%" height="15" fill="rgb(221,225,9)" fg:x="238" fg:w="1"/><text x="75.3289%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.32%)</title><rect x="75.0789%" y="149" width="0.3155%" height="15" fill="rgb(224,227,45)" fg:x="238" fg:w="1"/><text x="75.3289%" y="159.50"></text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin_internal::_{{closure}} (1 samples, 0.32%)</title><rect x="75.0789%" y="133" width="0.3155%" height="15" fill="rgb(229,198,43)" fg:x="238" fg:w="1"/><text x="75.3289%" y="143.50"></text></g><g><title>lfest::types::limit_order::LimitOrder&lt;Q,UserOrderId,OrderStatus&gt;::side (1 samples, 0.32%)</title><rect x="75.0789%" y="117" width="0.3155%" height="15" fill="rgb(206,209,35)" fg:x="238" fg:w="1"/><text x="75.3289%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (2 samples, 0.63%)</title><rect x="75.3943%" y="197" width="0.6309%" height="15" fill="rgb(245,195,53)" fg:x="239" fg:w="2"/><text x="75.6443%" y="207.50"></text></g><g><title>fpdec_core::powers_of_ten::checked_mul_pow_ten (3 samples, 0.95%)</title><rect x="76.0252%" y="197" width="0.9464%" height="15" fill="rgb(240,92,26)" fg:x="241" fg:w="3"/><text x="76.2752%" y="207.50"></text></g><g><title>core::num::&lt;impl i128&gt;::checked_mul (3 samples, 0.95%)</title><rect x="76.0252%" y="181" width="0.9464%" height="15" fill="rgb(207,40,23)" fg:x="241" fg:w="3"/><text x="76.2752%" y="191.50"></text></g><g><title>core::num::&lt;impl i128&gt;::overflowing_mul (3 samples, 0.95%)</title><rect x="76.0252%" y="165" width="0.9464%" height="15" fill="rgb(223,111,35)" fg:x="241" fg:w="3"/><text x="76.2752%" y="175.50"></text></g><g><title>fpdec::binops::div_rounded::checked_div_rounded (11 samples, 3.47%)</title><rect x="75.3943%" y="213" width="3.4700%" height="15" fill="rgb(229,147,28)" fg:x="239" fg:w="11"/><text x="75.6443%" y="223.50">fpd..</text></g><g><title>fpdec_core::rounding::i128_div_rounded (6 samples, 1.89%)</title><rect x="76.9716%" y="197" width="1.8927%" height="15" fill="rgb(211,29,28)" fg:x="244" fg:w="6"/><text x="77.2216%" y="207.50">f..</text></g><g><title>fpdec_core::i128_div_mod_floor (5 samples, 1.58%)</title><rect x="77.2871%" y="181" width="1.5773%" height="15" fill="rgb(228,72,33)" fg:x="245" fg:w="5"/><text x="77.5371%" y="191.50"></text></g><g><title>__divti3 (5 samples, 1.58%)</title><rect x="77.2871%" y="165" width="1.5773%" height="15" fill="rgb(205,214,31)" fg:x="245" fg:w="5"/><text x="77.5371%" y="175.50"></text></g><g><title>compiler_builtins::int::sdiv::__divti3 (4 samples, 1.26%)</title><rect x="77.6025%" y="149" width="1.2618%" height="15" fill="rgb(224,111,15)" fg:x="246" fg:w="4"/><text x="77.8525%" y="159.50"></text></g><g><title>compiler_builtins::int::udiv::__udivti3 (3 samples, 0.95%)</title><rect x="77.9180%" y="133" width="0.9464%" height="15" fill="rgb(253,21,26)" fg:x="247" fg:w="3"/><text x="78.1680%" y="143.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (2 samples, 0.63%)</title><rect x="78.2334%" y="117" width="0.6309%" height="15" fill="rgb(245,139,43)" fg:x="248" fg:w="2"/><text x="78.4834%" y="127.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (67 samples, 21.14%)</title><rect x="75.3943%" y="277" width="21.1356%" height="15" fill="rgb(252,170,7)" fg:x="239" fg:w="67"/><text x="75.6443%" y="287.50">&lt;core::slice::iter::Iter&lt;T&gt; as co..</text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin_internal::_{{closure}} (67 samples, 21.14%)</title><rect x="75.3943%" y="261" width="21.1356%" height="15" fill="rgb(231,118,14)" fg:x="239" fg:w="67"/><text x="75.6443%" y="271.50">lfest::order_margin::OrderMargin&lt;..</text></g><g><title>&lt;lfest::types::currency::quote_currency::QuoteCurrency as lfest::types::currency::currency_trait::Currency&gt;::convert (67 samples, 21.14%)</title><rect x="75.3943%" y="245" width="21.1356%" height="15" fill="rgb(238,83,0)" fg:x="239" fg:w="67"/><text x="75.6443%" y="255.50">&lt;lfest::types::currency::quote_cu..</text></g><g><title>fpdec::binops::div::&lt;impl core::ops::arith::Div for fpdec::Decimal&gt;::div (67 samples, 21.14%)</title><rect x="75.3943%" y="229" width="21.1356%" height="15" fill="rgb(221,39,39)" fg:x="239" fg:w="67"/><text x="75.6443%" y="239.50">fpdec::binops::div::&lt;impl core::o..</text></g><g><title>fpdec::normalize (56 samples, 17.67%)</title><rect x="78.8644%" y="213" width="17.6656%" height="15" fill="rgb(222,119,46)" fg:x="250" fg:w="56"/><text x="79.1144%" y="223.50">fpdec::normalize</text></g><g><title>__divti3 (23 samples, 7.26%)</title><rect x="89.2744%" y="197" width="7.2555%" height="15" fill="rgb(222,165,49)" fg:x="283" fg:w="23"/><text x="89.5244%" y="207.50">__divti3</text></g><g><title>compiler_builtins::int::sdiv::__divti3 (21 samples, 6.62%)</title><rect x="89.9054%" y="181" width="6.6246%" height="15" fill="rgb(219,113,52)" fg:x="285" fg:w="21"/><text x="90.1554%" y="191.50">compiler_..</text></g><g><title>compiler_builtins::int::udiv::__udivti3 (9 samples, 2.84%)</title><rect x="93.6909%" y="165" width="2.8391%" height="15" fill="rgb(214,7,15)" fg:x="297" fg:w="9"/><text x="93.9409%" y="175.50">co..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (6 samples, 1.89%)</title><rect x="94.6372%" y="149" width="1.8927%" height="15" fill="rgb(235,32,4)" fg:x="300" fg:w="6"/><text x="94.8872%" y="159.50">c..</text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin (76 samples, 23.97%)</title><rect x="73.8170%" y="309" width="23.9748%" height="15" fill="rgb(238,90,54)" fg:x="234" fg:w="76"/><text x="74.0670%" y="319.50">lfest::order_margin::OrderMargin&lt;Q,Use..</text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::order_margin_internal (76 samples, 23.97%)</title><rect x="73.8170%" y="293" width="23.9748%" height="15" fill="rgb(213,208,19)" fg:x="234" fg:w="76"/><text x="74.0670%" y="303.50">lfest::order_margin::OrderMargin&lt;Q,Use..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (4 samples, 1.26%)</title><rect x="96.5300%" y="277" width="1.2618%" height="15" fill="rgb(233,156,4)" fg:x="306" fg:w="4"/><text x="96.7800%" y="287.50"></text></g><g><title>alloc::slice::stable_sort (4 samples, 1.26%)</title><rect x="96.5300%" y="261" width="1.2618%" height="15" fill="rgb(207,194,5)" fg:x="306" fg:w="4"/><text x="96.7800%" y="271.50"></text></g><g><title>core::slice::sort::merge_sort (4 samples, 1.26%)</title><rect x="96.5300%" y="245" width="1.2618%" height="15" fill="rgb(206,111,30)" fg:x="306" fg:w="4"/><text x="96.7800%" y="255.50"></text></g><g><title>core::slice::sort::find_streak (4 samples, 1.26%)</title><rect x="96.5300%" y="229" width="1.2618%" height="15" fill="rgb(243,70,54)" fg:x="306" fg:w="4"/><text x="96.7800%" y="239.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by_key::_{{closure}} (4 samples, 1.26%)</title><rect x="96.5300%" y="213" width="1.2618%" height="15" fill="rgb(242,28,8)" fg:x="306" fg:w="4"/><text x="96.7800%" y="223.50"></text></g><g><title>core::cmp::PartialOrd::lt (4 samples, 1.26%)</title><rect x="96.5300%" y="197" width="1.2618%" height="15" fill="rgb(219,106,18)" fg:x="306" fg:w="4"/><text x="96.7800%" y="207.50"></text></g><g><title>&lt;lfest::types::currency::quote_currency::QuoteCurrency as core::cmp::PartialOrd&gt;::partial_cmp (4 samples, 1.26%)</title><rect x="96.5300%" y="181" width="1.2618%" height="15" fill="rgb(244,222,10)" fg:x="306" fg:w="4"/><text x="96.7800%" y="191.50"></text></g><g><title>fpdec::binops::cmp::&lt;impl core::cmp::PartialOrd for fpdec::Decimal&gt;::partial_cmp (3 samples, 0.95%)</title><rect x="96.8454%" y="165" width="0.9464%" height="15" fill="rgb(236,179,52)" fg:x="307" fg:w="3"/><text x="97.0954%" y="175.50"></text></g><g><title>fpdec_core::checked_adjust_coeffs (1 samples, 0.32%)</title><rect x="97.4763%" y="149" width="0.3155%" height="15" fill="rgb(213,23,39)" fg:x="309" fg:w="1"/><text x="97.7263%" y="159.50"></text></g><g><title>std::panic::catch_unwind (232 samples, 73.19%)</title><rect x="24.9211%" y="821" width="73.1861%" height="15" fill="rgb(238,48,10)" fg:x="79" fg:w="232"/><text x="25.1711%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (232 samples, 73.19%)</title><rect x="24.9211%" y="805" width="73.1861%" height="15" fill="rgb(251,196,23)" fg:x="79" fg:w="232"/><text x="25.1711%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (232 samples, 73.19%)</title><rect x="24.9211%" y="789" width="73.1861%" height="15" fill="rgb(250,152,24)" fg:x="79" fg:w="232"/><text x="25.1711%" y="799.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (232 samples, 73.19%)</title><rect x="24.9211%" y="773" width="73.1861%" height="15" fill="rgb(209,150,17)" fg:x="79" fg:w="232"/><text x="25.1711%" y="783.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (232 samples, 73.19%)</title><rect x="24.9211%" y="757" width="73.1861%" height="15" fill="rgb(234,202,34)" fg:x="79" fg:w="232"/><text x="25.1711%" y="767.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (232 samples, 73.19%)</title><rect x="24.9211%" y="741" width="73.1861%" height="15" fill="rgb(253,148,53)" fg:x="79" fg:w="232"/><text x="25.1711%" y="751.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (232 samples, 73.19%)</title><rect x="24.9211%" y="725" width="73.1861%" height="15" fill="rgb(218,129,16)" fg:x="79" fg:w="232"/><text x="25.1711%" y="735.50">core::ops::function::FnOnce::call_once</text></g><g><title>submit_limit_order::main (232 samples, 73.19%)</title><rect x="24.9211%" y="709" width="73.1861%" height="15" fill="rgb(216,85,19)" fg:x="79" fg:w="232"/><text x="25.1711%" y="719.50">submit_limit_order::main</text></g><g><title>submit_limit_order::benches (232 samples, 73.19%)</title><rect x="24.9211%" y="693" width="73.1861%" height="15" fill="rgb(235,228,7)" fg:x="79" fg:w="232"/><text x="25.1711%" y="703.50">submit_limit_order::benches</text></g><g><title>submit_limit_order::criterion_benchmark (220 samples, 69.40%)</title><rect x="28.7066%" y="677" width="69.4006%" height="15" fill="rgb(245,175,0)" fg:x="91" fg:w="220"/><text x="28.9566%" y="687.50">submit_limit_order::criterion_benchmark</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (220 samples, 69.40%)</title><rect x="28.7066%" y="661" width="69.4006%" height="15" fill="rgb(208,168,36)" fg:x="91" fg:w="220"/><text x="28.9566%" y="671.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (220 samples, 69.40%)</title><rect x="28.7066%" y="645" width="69.4006%" height="15" fill="rgb(246,171,24)" fg:x="91" fg:w="220"/><text x="28.9566%" y="655.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench</text></g><g><title>criterion::routine::Routine::test (220 samples, 69.40%)</title><rect x="28.7066%" y="629" width="69.4006%" height="15" fill="rgb(215,142,24)" fg:x="91" fg:w="220"/><text x="28.9566%" y="639.50">criterion::routine::Routine::test</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (220 samples, 69.40%)</title><rect x="28.7066%" y="613" width="69.4006%" height="15" fill="rgb(250,187,7)" fg:x="91" fg:w="220"/><text x="28.9566%" y="623.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench</text></g><g><title>core::iter::traits::iterator::Iterator::collect (220 samples, 69.40%)</title><rect x="28.7066%" y="597" width="69.4006%" height="15" fill="rgb(228,66,33)" fg:x="91" fg:w="220"/><text x="28.9566%" y="607.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (220 samples, 69.40%)</title><rect x="28.7066%" y="581" width="69.4006%" height="15" fill="rgb(234,215,21)" fg:x="91" fg:w="220"/><text x="28.9566%" y="591.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (220 samples, 69.40%)</title><rect x="28.7066%" y="565" width="69.4006%" height="15" fill="rgb(222,191,20)" fg:x="91" fg:w="220"/><text x="28.9566%" y="575.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (220 samples, 69.40%)</title><rect x="28.7066%" y="549" width="69.4006%" height="15" fill="rgb(245,79,54)" fg:x="91" fg:w="220"/><text x="28.9566%" y="559.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (220 samples, 69.40%)</title><rect x="28.7066%" y="533" width="69.4006%" height="15" fill="rgb(240,10,37)" fg:x="91" fg:w="220"/><text x="28.9566%" y="543.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (220 samples, 69.40%)</title><rect x="28.7066%" y="517" width="69.4006%" height="15" fill="rgb(214,192,32)" fg:x="91" fg:w="220"/><text x="28.9566%" y="527.50">alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (220 samples, 69.40%)</title><rect x="28.7066%" y="501" width="69.4006%" height="15" fill="rgb(209,36,54)" fg:x="91" fg:w="220"/><text x="28.9566%" y="511.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (220 samples, 69.40%)</title><rect x="28.7066%" y="485" width="69.4006%" height="15" fill="rgb(220,10,11)" fg:x="91" fg:w="220"/><text x="28.9566%" y="495.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (220 samples, 69.40%)</title><rect x="28.7066%" y="469" width="69.4006%" height="15" fill="rgb(221,106,17)" fg:x="91" fg:w="220"/><text x="28.9566%" y="479.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (220 samples, 69.40%)</title><rect x="28.7066%" y="453" width="69.4006%" height="15" fill="rgb(251,142,44)" fg:x="91" fg:w="220"/><text x="28.9566%" y="463.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (220 samples, 69.40%)</title><rect x="28.7066%" y="437" width="69.4006%" height="15" fill="rgb(238,13,15)" fg:x="91" fg:w="220"/><text x="28.9566%" y="447.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}}</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (220 samples, 69.40%)</title><rect x="28.7066%" y="421" width="69.4006%" height="15" fill="rgb(208,107,27)" fg:x="91" fg:w="220"/><text x="28.9566%" y="431.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}}</text></g><g><title>submit_limit_order::criterion_benchmark::_{{closure}} (220 samples, 69.40%)</title><rect x="28.7066%" y="405" width="69.4006%" height="15" fill="rgb(205,136,37)" fg:x="91" fg:w="220"/><text x="28.9566%" y="415.50">submit_limit_order::criterion_benchmark::_{{closure}}</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (220 samples, 69.40%)</title><rect x="28.7066%" y="389" width="69.4006%" height="15" fill="rgb(250,205,27)" fg:x="91" fg:w="220"/><text x="28.9566%" y="399.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>submit_limit_order::criterion_benchmark::_{{closure}}::_{{closure}} (220 samples, 69.40%)</title><rect x="28.7066%" y="373" width="69.4006%" height="15" fill="rgb(210,80,43)" fg:x="91" fg:w="220"/><text x="28.9566%" y="383.50">submit_limit_order::criterion_benchmark::_{{closure}}::_{{closure}}</text></g><g><title>submit_limit_order::submit_limit_orders (220 samples, 69.40%)</title><rect x="28.7066%" y="357" width="69.4006%" height="15" fill="rgb(247,160,36)" fg:x="91" fg:w="220"/><text x="28.9566%" y="367.50">submit_limit_order::submit_limit_orders</text></g><g><title>lfest::exchange::Exchange&lt;A,Q,UserOrderId,TransactionAccountingT&gt;::submit_limit_order (220 samples, 69.40%)</title><rect x="28.7066%" y="341" width="69.4006%" height="15" fill="rgb(234,13,49)" fg:x="91" fg:w="220"/><text x="28.9566%" y="351.50">lfest::exchange::Exchange&lt;A,Q,UserOrderId,TransactionAccountingT&gt;::submit_limit_order</text></g><g><title>lfest::exchange::Exchange&lt;A,Q,UserOrderId,TransactionAccountingT&gt;::append_limit_order (85 samples, 26.81%)</title><rect x="71.2934%" y="325" width="26.8139%" height="15" fill="rgb(234,122,0)" fg:x="226" fg:w="85"/><text x="71.5434%" y="335.50">lfest::exchange::Exchange&lt;A,Q,UserOrderId,T..</text></g><g><title>lfest::order_margin::OrderMargin&lt;Q,UserOrderId&gt;::update (1 samples, 0.32%)</title><rect x="97.7918%" y="309" width="0.3155%" height="15" fill="rgb(207,146,38)" fg:x="310" fg:w="1"/><text x="98.0418%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.32%)</title><rect x="97.7918%" y="293" width="0.3155%" height="15" fill="rgb(207,177,25)" fg:x="310" fg:w="1"/><text x="98.0418%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.32%)</title><rect x="97.7918%" y="277" width="0.3155%" height="15" fill="rgb(211,178,42)" fg:x="310" fg:w="1"/><text x="98.0418%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.32%)</title><rect x="97.7918%" y="261" width="0.3155%" height="15" fill="rgb(230,69,54)" fg:x="310" fg:w="1"/><text x="98.0418%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.32%)</title><rect x="97.7918%" y="245" width="0.3155%" height="15" fill="rgb(214,135,41)" fg:x="310" fg:w="1"/><text x="98.0418%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.32%)</title><rect x="97.7918%" y="229" width="0.3155%" height="15" fill="rgb(237,67,25)" fg:x="310" fg:w="1"/><text x="98.0418%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.32%)</title><rect x="97.7918%" y="213" width="0.3155%" height="15" fill="rgb(222,189,50)" fg:x="310" fg:w="1"/><text x="98.0418%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.32%)</title><rect x="97.7918%" y="197" width="0.3155%" height="15" fill="rgb(245,148,34)" fg:x="310" fg:w="1"/><text x="98.0418%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.32%)</title><rect x="97.7918%" y="181" width="0.3155%" height="15" fill="rgb(222,29,6)" fg:x="310" fg:w="1"/><text x="98.0418%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.32%)</title><rect x="97.7918%" y="165" width="0.3155%" height="15" fill="rgb(221,189,43)" fg:x="310" fg:w="1"/><text x="98.0418%" y="175.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.32%)</title><rect x="97.7918%" y="149" width="0.3155%" height="15" fill="rgb(207,36,27)" fg:x="310" fg:w="1"/><text x="98.0418%" y="159.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::new (1 samples, 0.32%)</title><rect x="97.7918%" y="133" width="0.3155%" height="15" fill="rgb(217,90,24)" fg:x="310" fg:w="1"/><text x="98.0418%" y="143.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (233 samples, 73.50%)</title><rect x="24.9211%" y="949" width="73.5016%" height="15" fill="rgb(224,66,35)" fg:x="79" fg:w="233"/><text x="25.1711%" y="959.50">__libc_start_main@@GLIBC_2.34</text></g><g><title>__libc_start_call_main (233 samples, 73.50%)</title><rect x="24.9211%" y="933" width="73.5016%" height="15" fill="rgb(221,13,50)" fg:x="79" fg:w="233"/><text x="25.1711%" y="943.50">__libc_start_call_main</text></g><g><title>main (233 samples, 73.50%)</title><rect x="24.9211%" y="917" width="73.5016%" height="15" fill="rgb(236,68,49)" fg:x="79" fg:w="233"/><text x="25.1711%" y="927.50">main</text></g><g><title>std::rt::lang_start_internal (233 samples, 73.50%)</title><rect x="24.9211%" y="901" width="73.5016%" height="15" fill="rgb(229,146,28)" fg:x="79" fg:w="233"/><text x="25.1711%" y="911.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (233 samples, 73.50%)</title><rect x="24.9211%" y="885" width="73.5016%" height="15" fill="rgb(225,31,38)" fg:x="79" fg:w="233"/><text x="25.1711%" y="895.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (233 samples, 73.50%)</title><rect x="24.9211%" y="869" width="73.5016%" height="15" fill="rgb(250,208,3)" fg:x="79" fg:w="233"/><text x="25.1711%" y="879.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (233 samples, 73.50%)</title><rect x="24.9211%" y="853" width="73.5016%" height="15" fill="rgb(246,54,23)" fg:x="79" fg:w="233"/><text x="25.1711%" y="863.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (233 samples, 73.50%)</title><rect x="24.9211%" y="837" width="73.5016%" height="15" fill="rgb(243,76,11)" fg:x="79" fg:w="233"/><text x="25.1711%" y="847.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (1 samples, 0.32%)</title><rect x="98.1073%" y="821" width="0.3155%" height="15" fill="rgb(245,21,50)" fg:x="311" fg:w="1"/><text x="98.3573%" y="831.50"></text></g><g><title>std::sys::pal::unix::thread::guard::init (1 samples, 0.32%)</title><rect x="98.1073%" y="805" width="0.3155%" height="15" fill="rgb(228,9,43)" fg:x="311" fg:w="1"/><text x="98.3573%" y="815.50"></text></g><g><title>std::sys::pal::unix::thread::guard::get_stack_start_aligned (1 samples, 0.32%)</title><rect x="98.1073%" y="789" width="0.3155%" height="15" fill="rgb(208,100,47)" fg:x="311" fg:w="1"/><text x="98.3573%" y="799.50"></text></g><g><title>std::sys::pal::unix::thread::guard::get_stack_start (1 samples, 0.32%)</title><rect x="98.1073%" y="773" width="0.3155%" height="15" fill="rgb(232,26,8)" fg:x="311" fg:w="1"/><text x="98.3573%" y="783.50"></text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (1 samples, 0.32%)</title><rect x="98.1073%" y="757" width="0.3155%" height="15" fill="rgb(216,166,38)" fg:x="311" fg:w="1"/><text x="98.3573%" y="767.50"></text></g><g><title>fclose@@GLIBC_2.2.5 (1 samples, 0.32%)</title><rect x="98.1073%" y="741" width="0.3155%" height="15" fill="rgb(251,202,51)" fg:x="311" fg:w="1"/><text x="98.3573%" y="751.50"></text></g><g><title>_IO_file_close_it@@GLIBC_2.2.5 (1 samples, 0.32%)</title><rect x="98.1073%" y="725" width="0.3155%" height="15" fill="rgb(254,216,34)" fg:x="311" fg:w="1"/><text x="98.3573%" y="735.50"></text></g><g><title>__close_nocancel (1 samples, 0.32%)</title><rect x="98.1073%" y="709" width="0.3155%" height="15" fill="rgb(251,32,27)" fg:x="311" fg:w="1"/><text x="98.3573%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.95%)</title><rect x="98.7382%" y="933" width="0.9464%" height="15" fill="rgb(208,127,28)" fg:x="313" fg:w="3"/><text x="98.9882%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="99.3691%" y="917" width="0.3155%" height="15" fill="rgb(224,137,22)" fg:x="315" fg:w="1"/><text x="99.6191%" y="927.50"></text></g><g><title>all (317 samples, 100%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(254,70,32)" fg:x="0" fg:w="317"/><text x="0.2500%" y="1007.50"></text></g><g><title>submit_limit_or (251 samples, 79.18%)</title><rect x="20.8202%" y="981" width="79.1798%" height="15" fill="rgb(229,75,37)" fg:x="66" fg:w="251"/><text x="21.0702%" y="991.50">submit_limit_or</text></g><g><title>_start (240 samples, 75.71%)</title><rect x="24.2902%" y="965" width="75.7098%" height="15" fill="rgb(252,64,23)" fg:x="77" fg:w="240"/><text x="24.5402%" y="975.50">_start</text></g><g><title>_dl_start (5 samples, 1.58%)</title><rect x="98.4227%" y="949" width="1.5773%" height="15" fill="rgb(232,162,48)" fg:x="312" fg:w="5"/><text x="98.6727%" y="959.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.32%)</title><rect x="99.6845%" y="933" width="0.3155%" height="15" fill="rgb(246,160,12)" fg:x="316" fg:w="1"/><text x="99.9345%" y="943.50"></text></g><g><title>init_cpu_features.constprop.0 (1 samples, 0.32%)</title><rect x="99.6845%" y="917" width="0.3155%" height="15" fill="rgb(247,166,0)" fg:x="316" fg:w="1"/><text x="99.9345%" y="927.50"></text></g><g><title>do_tunable_update_val (1 samples, 0.32%)</title><rect x="99.6845%" y="901" width="0.3155%" height="15" fill="rgb(249,219,21)" fg:x="316" fg:w="1"/><text x="99.9345%" y="911.50"></text></g></svg></svg>