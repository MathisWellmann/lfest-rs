--- src/position.rs
+++ replace Position<I, D, BaseOrQuote>::quantity -> BaseOrQuote with Default::default()
@@ -41,21 +41,17 @@
             Position::Neutral => BaseOrQuote::PairedCurrency::zero(),
             Position::Long(inner) => inner.unrealized_pnl(bid),
             Position::Short(inner) => inner.unrealized_pnl(ask).neg(),
         }
     }
 
     /// The quantity of the position, is negative when short.
     pub fn quantity(&self) -> BaseOrQuote {
-        match self {
-            Position::Neutral => BaseOrQuote::zero(),
-            Position::Long(inner) => inner.quantity(),
-            Position::Short(inner) => inner.quantity().neg(),
-        }
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 
     /// Get the outstanding fees of the position that will be payed when reducing the position.
     pub fn outstanding_fees(&self) -> BaseOrQuote::PairedCurrency {
         match self {
             Position::Neutral => BaseOrQuote::PairedCurrency::zero(),
             Position::Long(inner) => inner.outstanding_fees(),
             Position::Short(inner) => inner.outstanding_fees(),
