--- src/market_update/candle_update.rs
+++ replace > with == in <impl MarketUpdate<I, D, BaseOrQuote> for Candle<I, D>>::limit_order_filled
@@ -65,17 +65,17 @@
         &self,
         order: &LimitOrder<I, D, BaseOrQuote, UserOrderIdT, Pending<I, D, BaseOrQuote>>,
     ) -> Option<BaseOrQuote> {
         debug_assert!(order.remaining_quantity() > BaseOrQuote::zero());
 
         // As a simplifying assumption, the order always get executed fully when using candles if the price is right.
         if match order.side() {
             Side::Buy => self.low < order.limit_price(),
-            Side::Sell => self.high > order.limit_price(),
+            Side::Sell => self.high == /* ~ changed by cargo-mutants ~ */ order.limit_price(),
         } {
             // Order is executed fully with candles.
             Some(match order.side() {
                 Side::Buy => order.remaining_quantity(),
                 Side::Sell => order.remaining_quantity(),
             })
         } else {
             None
